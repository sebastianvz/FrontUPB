{"ast":null,"code":"import _slicedToArray from \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/views/Components/Notifications.js\";\n\n/*eslint-disable*/\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\"; // @material-ui/icons\n\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport Heading from \"components/Heading/Heading.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport Instruction from \"components/Instruction/Instruction.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport styles from \"assets/jss/material-dashboard-pro-react/views/notificationsStyle.js\";\nimport noticeModal1 from \"assets/img/card-1.jpeg\";\nimport noticeModal2 from \"assets/img/card-2.jpeg\";\nvar useStyles = makeStyles(styles);\nvar Transition = React.forwardRef(function Transition(props, ref) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"down\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n});\nexport default function Notifications() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tl = _React$useState2[0],\n      setTL = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      tc = _React$useState4[0],\n      setTC = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      tr = _React$useState6[0],\n      setTR = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      bl = _React$useState8[0],\n      setBL = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      bc = _React$useState10[0],\n      setBC = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      br = _React$useState12[0],\n      setBR = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      classicModal = _React$useState14[0],\n      setClassicModal = _React$useState14[1];\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      noticeModal = _React$useState16[0],\n      setNoticeModal = _React$useState16[1];\n\n  var _React$useState17 = React.useState(false),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      smallModal = _React$useState18[0],\n      setSmallModal = _React$useState18[1];\n\n  React.useEffect(function () {\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      // to stop the warning of calling setState of unmounted component\n      var id = window.setTimeout(null, 0);\n\n      while (id--) {\n        window.clearTimeout(id);\n      }\n    };\n  });\n\n  var showNotification = function showNotification(place) {\n    switch (place) {\n      case \"tl\":\n        if (!tl) {\n          setTL(true);\n          setTimeout(function () {\n            setTL(false);\n          }, 6000);\n        }\n\n        break;\n\n      case \"tc\":\n        if (!tc) {\n          setTC(true);\n          setTimeout(function () {\n            setTC(false);\n          }, 6000);\n        }\n\n        break;\n\n      case \"tr\":\n        if (!tr) {\n          setTR(true);\n          setTimeout(function () {\n            setTR(false);\n          }, 6000);\n        }\n\n        break;\n\n      case \"bl\":\n        if (!bl) {\n          setBL(true);\n          setTimeout(function () {\n            setBL(false);\n          }, 6000);\n        }\n\n        break;\n\n      case \"bc\":\n        if (!bc) {\n          setBC(true);\n          setTimeout(function () {\n            setBC(false);\n          }, 6000);\n        }\n\n        break;\n\n      case \"br\":\n        if (!br) {\n          setBR(true);\n          setTimeout(function () {\n            setBR(false);\n          }, 6000);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    title: \"Notifications\",\n    textAlign: \"center\",\n    category: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Handcrafted by our friends from\", \" \", React.createElement(\"a\", {\n      target: \"_blank\",\n      href: \"https://material-ui-next.com/?ref=creativetim\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Material UI\"), \" \", \"and styled by\", \" \", React.createElement(\"a\", {\n      target: \"_blank\",\n      href: \"https://www.creative-tim.com/?ref=mdpr-notifications-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Creative Tim\"), \". Please checkout the\", \" \", React.createElement(\"a\", {\n      href: \"#pablo\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"full documentation\"), \".\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.cardHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Notifications Style\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    message: \"This is a plain notification\",\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    message: \"This is a notification with close button.\",\n    close: true,\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    message: \"This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.\",\n    close: true,\n    icon: AddAlert,\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    message: 'This is a notification with close button and icon and is made with color=\"rose\". You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don\\'t have to worry about the style.',\n    close: true,\n    icon: AddAlert,\n    color: \"rose\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.cardHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Notification states\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    message: 'INFO - This is a regular notification made with color=\"info\"',\n    close: true,\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    message: 'SUCCESS - This is a regular notification made with color=\"success\"',\n    close: true,\n    color: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    message: 'WARNING - This is a regular notification made with color=\"warning\"',\n    close: true,\n    color: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    message: 'DANGER - This is a regular notification made with color=\"danger\"',\n    close: true,\n    color: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    message: 'PRIMARY - This is a regular notification made with color=\"primary\"',\n    close: true,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }), React.createElement(SnackbarContent, {\n    message: 'ROSE - This is a regular notification made with color=\"primary\"',\n    close: true,\n    color: \"rose\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }))))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.cardHeader + \" \" + classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, \"Notifications Places\"), React.createElement(\"p\", {\n    className: classes.cardSubtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Click to view notifications\")))), React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fullWidth: true,\n    color: \"primary\",\n    onClick: function onClick() {\n      return showNotification(\"tl\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"Top Left\"), React.createElement(Snackbar, {\n    place: \"tl\",\n    color: \"info\",\n    icon: AddAlert,\n    message: \"Welcome to MATERIAL DASHBOARD PRO - a beautiful admin panel for every web developer.\",\n    open: tl,\n    closeNotification: function closeNotification() {\n      return setTL(false);\n    },\n    close: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fullWidth: true,\n    color: \"primary\",\n    onClick: function onClick() {\n      return showNotification(\"tc\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, \"Top Center\"), React.createElement(Snackbar, {\n    place: \"tc\",\n    color: \"info\",\n    icon: AddAlert,\n    message: \"Welcome to MATERIAL DASHBOARD PRO - a beautiful admin panel for every web developer.\",\n    open: tc,\n    closeNotification: function closeNotification() {\n      return setTC(false);\n    },\n    close: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fullWidth: true,\n    color: \"primary\",\n    onClick: function onClick() {\n      return showNotification(\"tr\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, \"Top Right\"), React.createElement(Snackbar, {\n    place: \"tr\",\n    color: \"info\",\n    icon: AddAlert,\n    message: \"Welcome to MATERIAL DASHBOARD PRO - a beautiful admin panel for every web developer.\",\n    open: tr,\n    closeNotification: function closeNotification() {\n      return setTR(false);\n    },\n    close: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }))), React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fullWidth: true,\n    color: \"primary\",\n    onClick: function onClick() {\n      return showNotification(\"bl\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, \"Bottom Left\"), React.createElement(Snackbar, {\n    place: \"bl\",\n    color: \"info\",\n    icon: AddAlert,\n    message: \"Welcome to MATERIAL DASHBOARD PRO - a beautiful admin panel for every web developer.\",\n    open: bl,\n    closeNotification: function closeNotification() {\n      return setBL(false);\n    },\n    close: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fullWidth: true,\n    color: \"primary\",\n    onClick: function onClick() {\n      return showNotification(\"bc\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, \"Bottom Center\"), React.createElement(Snackbar, {\n    place: \"bc\",\n    color: \"info\",\n    icon: AddAlert,\n    message: \"Welcome to MATERIAL DASHBOARD PRO - a beautiful admin panel for every web developer.\",\n    open: bc,\n    closeNotification: function closeNotification() {\n      return setBC(false);\n    },\n    close: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fullWidth: true,\n    color: \"primary\",\n    onClick: function onClick() {\n      return showNotification(\"br\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, \"Bottom Right\"), React.createElement(Snackbar, {\n    place: \"br\",\n    color: \"info\",\n    icon: AddAlert,\n    message: \"Welcome to MATERIAL DASHBOARD PRO - a beautiful admin panel for every web developer.\",\n    open: br,\n    closeNotification: function closeNotification() {\n      return setBR(false);\n    },\n    close: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }))), React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    className: classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.cardHeader + \" \" + classes.center + \" \" + classes.modalSectionTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, \"Modal\")), React.createElement(Button, {\n    color: \"primary\",\n    round: true,\n    className: classes.marginRight,\n    onClick: function onClick() {\n      return setClassicModal(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, \"Classic modal\"), React.createElement(Dialog, {\n    classes: {\n      root: classes.center + \" \" + classes.modalRoot,\n      paper: classes.modal\n    },\n    open: classicModal,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: function onClose() {\n      return setClassicModal(false);\n    },\n    \"aria-labelledby\": \"classic-modal-slide-title\",\n    \"aria-describedby\": \"classic-modal-slide-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"classic-modal-slide-title\",\n    disableTypography: true,\n    className: classes.modalHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, React.createElement(Button, {\n    justIcon: true,\n    className: classes.modalCloseButton,\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    color: \"transparent\",\n    onClick: function onClick() {\n      return setClassicModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }, React.createElement(Close, {\n    className: classes.modalClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  })), React.createElement(\"h4\", {\n    className: classes.modalTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }, \"Modal title\")), React.createElement(DialogContent, {\n    id: \"classic-modal-slide-description\",\n    className: classes.modalBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  }, \"Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean. A small river named Duden flows by their place and supplies it with the necessary regelialia. It is a paradisematic country, in which roasted parts of sentences fly into your mouth. Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic life One day however a small line of blind text by the name of Lorem Ipsum decided to leave for the far World of Grammar.\")), React.createElement(DialogActions, {\n    className: classes.modalFooter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }, \"Nice Button\"), React.createElement(Button, {\n    onClick: function onClick() {\n      return setClassicModal(false);\n    },\n    color: \"danger\",\n    simple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, \"Close\"))), React.createElement(Button, {\n    color: \"info\",\n    round: true,\n    className: classes.marginRight,\n    onClick: function onClick() {\n      return setNoticeModal(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }, \"Notice Modal\"), React.createElement(Dialog, {\n    classes: {\n      root: classes.center + \" \" + classes.modalRoot,\n      paper: classes.modal\n    },\n    open: noticeModal,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: function onClose() {\n      return setNoticeModal(false);\n    },\n    \"aria-labelledby\": \"notice-modal-slide-title\",\n    \"aria-describedby\": \"notice-modal-slide-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"notice-modal-slide-title\",\n    disableTypography: true,\n    className: classes.modalHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461\n    },\n    __self: this\n  }, React.createElement(Button, {\n    justIcon: true,\n    className: classes.modalCloseButton,\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    color: \"transparent\",\n    onClick: function onClick() {\n      return setNoticeModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466\n    },\n    __self: this\n  }, React.createElement(Close, {\n    className: classes.modalClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474\n    },\n    __self: this\n  })), React.createElement(\"h4\", {\n    className: classes.modalTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476\n    },\n    __self: this\n  }, \"Notice Modal\")), React.createElement(DialogContent, {\n    id: \"notice-modal-slide-description\",\n    className: classes.modalBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478\n    },\n    __self: this\n  }, React.createElement(Instruction, {\n    title: \"1. Register\",\n    text: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, \"The first step is to create an account at\", \" \", React.createElement(\"a\", {\n      href: \"https://www.creative-tim.com/?ref=mdpr-notifications-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, \"Creative Tim\"), \". You can choose a social network or go for the classic version, whatever works best for you.\"),\n    image: noticeModal1,\n    className: classes.instructionNoticeModal,\n    imageClassName: classes.imageNoticeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482\n    },\n    __self: this\n  }), React.createElement(Instruction, {\n    title: \"2. Apply\",\n    text: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, \"The first step is to create an account at\", \" \", React.createElement(\"a\", {\n      href: \"https://www.creative-tim.com/?ref=mdpr-notifications-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, \"Creative Tim\"), \". You can choose a social network or go for the classic version, whatever works best for you.\"),\n    image: noticeModal2,\n    className: classes.instructionNoticeModal,\n    imageClassName: classes.imageNoticeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514\n    },\n    __self: this\n  }, \"If you have more questions, don\", \"'\", \"t hesitate to contact us or send us a tweet @creativetim. We\", \"'\", \"re here to help!\")), React.createElement(DialogActions, {\n    className: classes.modalFooter + \" \" + classes.modalFooterCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      return setNoticeModal(false);\n    },\n    color: \"info\",\n    round: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525\n    },\n    __self: this\n  }, \"Sounds Good\"))), React.createElement(Button, {\n    color: \"rose\",\n    round: true,\n    className: classes.marginRight,\n    onClick: function onClick() {\n      return setSmallModal(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534\n    },\n    __self: this\n  }, \"Small alert modal\"), React.createElement(Dialog, {\n    classes: {\n      root: classes.center + \" \" + classes.modalRoot,\n      paper: classes.modal + \" \" + classes.modalSmall\n    },\n    open: smallModal,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: function onClose() {\n      return setSmallModal(false);\n    },\n    \"aria-labelledby\": \"small-modal-slide-title\",\n    \"aria-describedby\": \"small-modal-slide-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"small-modal-slide-title\",\n    disableTypography: true,\n    className: classes.modalHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554\n    },\n    __self: this\n  }, React.createElement(Button, {\n    justIcon: true,\n    className: classes.modalCloseButton,\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    color: \"transparent\",\n    onClick: function onClick() {\n      return setSmallModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559\n    },\n    __self: this\n  }, React.createElement(Close, {\n    className: classes.modalClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567\n    },\n    __self: this\n  }))), React.createElement(DialogContent, {\n    id: \"small-modal-slide-description\",\n    className: classes.modalBody + \" \" + classes.modalSmallBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576\n    },\n    __self: this\n  }, \"Are you sure you want to do this?\")), React.createElement(DialogActions, {\n    className: classes.modalFooter + \" \" + classes.modalFooterCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick() {\n      return setSmallModal(false);\n    },\n    color: \"transparent\",\n    className: classes.modalSmallFooterFirstButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583\n    },\n    __self: this\n  }, \"Never Mind\"), React.createElement(Button, {\n    onClick: function onClick() {\n      return setSmallModal(false);\n    },\n    color: \"success\",\n    simple: true,\n    className: classes.modalSmallFooterFirstButton + \" \" + classes.modalSmallFooterSecondButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590\n    },\n    __self: this\n  }, \"Yes\")))))))))));\n}","map":{"version":3,"sources":["/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/views/Components/Notifications.js"],"names":["React","makeStyles","Slide","Dialog","DialogTitle","DialogContent","DialogActions","AddAlert","Close","Heading","GridContainer","GridItem","SnackbarContent","Button","Snackbar","Instruction","Card","CardBody","styles","noticeModal1","noticeModal2","useStyles","Transition","forwardRef","props","ref","Notifications","classes","useState","tl","setTL","tc","setTC","tr","setTR","bl","setBL","bc","setBC","br","setBR","classicModal","setClassicModal","noticeModal","setNoticeModal","smallModal","setSmallModal","useEffect","cleanup","id","window","setTimeout","clearTimeout","showNotification","place","cardHeader","cardTitle","center","cardSubtitle","modalSectionTitle","marginRight","root","modalRoot","paper","modal","modalHeader","modalCloseButton","modalClose","modalTitle","modalBody","modalFooter","instructionNoticeModal","imageNoticeModal","modalFooterCenter","modalSmall","modalSmallBody","modalSmallFooterFirstButton","modalSmallFooterSecondButton"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\n// @material-ui/icons\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport Close from \"@material-ui/icons/Close\";\n\n// core components\nimport Heading from \"components/Heading/Heading.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport Instruction from \"components/Instruction/Instruction.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport styles from \"assets/jss/material-dashboard-pro-react/views/notificationsStyle.js\";\n\nimport noticeModal1 from \"assets/img/card-1.jpeg\";\nimport noticeModal2 from \"assets/img/card-2.jpeg\";\n\nconst useStyles = makeStyles(styles);\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nexport default function Notifications() {\n  const classes = useStyles();\n  const [tl, setTL] = React.useState(false);\n  const [tc, setTC] = React.useState(false);\n  const [tr, setTR] = React.useState(false);\n  const [bl, setBL] = React.useState(false);\n  const [bc, setBC] = React.useState(false);\n  const [br, setBR] = React.useState(false);\n  const [classicModal, setClassicModal] = React.useState(false);\n  const [noticeModal, setNoticeModal] = React.useState(false);\n  const [smallModal, setSmallModal] = React.useState(false);\n  React.useEffect(() => {\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      // to stop the warning of calling setState of unmounted component\n      var id = window.setTimeout(null, 0);\n      while (id--) {\n        window.clearTimeout(id);\n      }\n    };\n  });\n  const showNotification = place => {\n    switch (place) {\n      case \"tl\":\n        if (!tl) {\n          setTL(true);\n          setTimeout(function() {\n            setTL(false);\n          }, 6000);\n        }\n        break;\n      case \"tc\":\n        if (!tc) {\n          setTC(true);\n          setTimeout(function() {\n            setTC(false);\n          }, 6000);\n        }\n        break;\n      case \"tr\":\n        if (!tr) {\n          setTR(true);\n          setTimeout(function() {\n            setTR(false);\n          }, 6000);\n        }\n        break;\n      case \"bl\":\n        if (!bl) {\n          setBL(true);\n          setTimeout(function() {\n            setBL(false);\n          }, 6000);\n        }\n        break;\n      case \"bc\":\n        if (!bc) {\n          setBC(true);\n          setTimeout(function() {\n            setBC(false);\n          }, 6000);\n        }\n        break;\n      case \"br\":\n        if (!br) {\n          setBR(true);\n          setTimeout(function() {\n            setBR(false);\n          }, 6000);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <div>\n      <Heading\n        title=\"Notifications\"\n        textAlign=\"center\"\n        category={\n          <span>\n            Handcrafted by our friends from{\" \"}\n            <a\n              target=\"_blank\"\n              href=\"https://material-ui-next.com/?ref=creativetim\"\n            >\n              Material UI\n            </a>{\" \"}\n            and styled by{\" \"}\n            <a\n              target=\"_blank\"\n              href=\"https://www.creative-tim.com/?ref=mdpr-notifications-page\"\n            >\n              Creative Tim\n            </a>\n            . Please checkout the{\" \"}\n            <a href=\"#pablo\" target=\"_blank\">\n              full documentation\n            </a>\n            .\n          </span>\n        }\n      />\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardBody>\n              <div className={classes.cardHeader}>\n                <h4 className={classes.cardTitle}>Notifications Style</h4>\n              </div>\n              <br />\n              <SnackbarContent\n                message={\"This is a plain notification\"}\n                color=\"info\"\n              />\n              <SnackbarContent\n                message={\"This is a notification with close button.\"}\n                close\n                color=\"info\"\n              />\n              <br />\n              <SnackbarContent\n                message={\n                  \"This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.\"\n                }\n                close\n                icon={AddAlert}\n                color=\"info\"\n              />\n              <br />\n              <SnackbarContent\n                message={\n                  'This is a notification with close button and icon and is made with color=\"rose\". You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don\\'t have to worry about the style.'\n                }\n                close\n                icon={AddAlert}\n                color=\"rose\"\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardBody>\n              <div>\n                <div className={classes.cardHeader}>\n                  <h4 className={classes.cardTitle}>Notification states</h4>\n                </div>\n                <br />\n                <SnackbarContent\n                  message={\n                    'INFO - This is a regular notification made with color=\"info\"'\n                  }\n                  close\n                  color=\"info\"\n                />\n                <SnackbarContent\n                  message={\n                    'SUCCESS - This is a regular notification made with color=\"success\"'\n                  }\n                  close\n                  color=\"success\"\n                />\n                <SnackbarContent\n                  message={\n                    'WARNING - This is a regular notification made with color=\"warning\"'\n                  }\n                  close\n                  color=\"warning\"\n                />\n                <SnackbarContent\n                  message={\n                    'DANGER - This is a regular notification made with color=\"danger\"'\n                  }\n                  close\n                  color=\"danger\"\n                />\n                <SnackbarContent\n                  message={\n                    'PRIMARY - This is a regular notification made with color=\"primary\"'\n                  }\n                  close\n                  color=\"primary\"\n                />\n                <SnackbarContent\n                  message={\n                    'ROSE - This is a regular notification made with color=\"primary\"'\n                  }\n                  close\n                  color=\"rose\"\n                />\n              </div>\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardBody>\n              <div>\n                <GridContainer justify=\"center\">\n                  <GridItem xs={12}>\n                    <div className={classes.cardHeader + \" \" + classes.center}>\n                      <h4 className={classes.cardTitle}>\n                        Notifications Places\n                      </h4>\n                      <p className={classes.cardSubtitle}>\n                        Click to view notifications\n                      </p>\n                    </div>\n                  </GridItem>\n                </GridContainer>\n                <GridContainer justify=\"center\">\n                  <GridItem xs={12} sm={12} md={3}>\n                    <Button\n                      fullWidth\n                      color=\"primary\"\n                      onClick={() => showNotification(\"tl\")}\n                    >\n                      Top Left\n                    </Button>\n                    <Snackbar\n                      place=\"tl\"\n                      color=\"info\"\n                      icon={AddAlert}\n                      message=\"Welcome to MATERIAL DASHBOARD PRO - a beautiful admin panel for every web developer.\"\n                      open={tl}\n                      closeNotification={() => setTL(false)}\n                      close\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={3}>\n                    <Button\n                      fullWidth\n                      color=\"primary\"\n                      onClick={() => showNotification(\"tc\")}\n                    >\n                      Top Center\n                    </Button>\n                    <Snackbar\n                      place=\"tc\"\n                      color=\"info\"\n                      icon={AddAlert}\n                      message=\"Welcome to MATERIAL DASHBOARD PRO - a beautiful admin panel for every web developer.\"\n                      open={tc}\n                      closeNotification={() => setTC(false)}\n                      close\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={3}>\n                    <Button\n                      fullWidth\n                      color=\"primary\"\n                      onClick={() => showNotification(\"tr\")}\n                    >\n                      Top Right\n                    </Button>\n                    <Snackbar\n                      place=\"tr\"\n                      color=\"info\"\n                      icon={AddAlert}\n                      message=\"Welcome to MATERIAL DASHBOARD PRO - a beautiful admin panel for every web developer.\"\n                      open={tr}\n                      closeNotification={() => setTR(false)}\n                      close\n                    />\n                  </GridItem>\n                </GridContainer>\n                <GridContainer justify=\"center\">\n                  <GridItem xs={12} sm={12} md={3}>\n                    <Button\n                      fullWidth\n                      color=\"primary\"\n                      onClick={() => showNotification(\"bl\")}\n                    >\n                      Bottom Left\n                    </Button>\n                    <Snackbar\n                      place=\"bl\"\n                      color=\"info\"\n                      icon={AddAlert}\n                      message=\"Welcome to MATERIAL DASHBOARD PRO - a beautiful admin panel for every web developer.\"\n                      open={bl}\n                      closeNotification={() => setBL(false)}\n                      close\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={3}>\n                    <Button\n                      fullWidth\n                      color=\"primary\"\n                      onClick={() => showNotification(\"bc\")}\n                    >\n                      Bottom Center\n                    </Button>\n                    <Snackbar\n                      place=\"bc\"\n                      color=\"info\"\n                      icon={AddAlert}\n                      message=\"Welcome to MATERIAL DASHBOARD PRO - a beautiful admin panel for every web developer.\"\n                      open={bc}\n                      closeNotification={() => setBC(false)}\n                      close\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={3}>\n                    <Button\n                      fullWidth\n                      color=\"primary\"\n                      onClick={() => showNotification(\"br\")}\n                    >\n                      Bottom Right\n                    </Button>\n                    <Snackbar\n                      place=\"br\"\n                      color=\"info\"\n                      icon={AddAlert}\n                      message=\"Welcome to MATERIAL DASHBOARD PRO - a beautiful admin panel for every web developer.\"\n                      open={br}\n                      closeNotification={() => setBR(false)}\n                      close\n                    />\n                  </GridItem>\n                </GridContainer>\n                <GridContainer justify=\"center\">\n                  <GridItem xs={12} sm={12} md={12} className={classes.center}>\n                    <div\n                      className={\n                        classes.cardHeader +\n                        \" \" +\n                        classes.center +\n                        \" \" +\n                        classes.modalSectionTitle\n                      }\n                    >\n                      <h4 className={classes.cardTitle}>Modal</h4>\n                    </div>\n                    <Button\n                      color=\"primary\"\n                      round\n                      className={classes.marginRight}\n                      onClick={() => setClassicModal(true)}\n                    >\n                      Classic modal\n                    </Button>\n                    <Dialog\n                      classes={{\n                        root: classes.center + \" \" + classes.modalRoot,\n                        paper: classes.modal\n                      }}\n                      open={classicModal}\n                      TransitionComponent={Transition}\n                      keepMounted\n                      onClose={() => setClassicModal(false)}\n                      aria-labelledby=\"classic-modal-slide-title\"\n                      aria-describedby=\"classic-modal-slide-description\"\n                    >\n                      <DialogTitle\n                        id=\"classic-modal-slide-title\"\n                        disableTypography\n                        className={classes.modalHeader}\n                      >\n                        <Button\n                          justIcon\n                          className={classes.modalCloseButton}\n                          key=\"close\"\n                          aria-label=\"Close\"\n                          color=\"transparent\"\n                          onClick={() => setClassicModal(false)}\n                        >\n                          <Close className={classes.modalClose} />\n                        </Button>\n                        <h4 className={classes.modalTitle}>Modal title</h4>\n                      </DialogTitle>\n                      <DialogContent\n                        id=\"classic-modal-slide-description\"\n                        className={classes.modalBody}\n                      >\n                        <p>\n                          Far far away, behind the word mountains, far from the\n                          countries Vokalia and Consonantia, there live the\n                          blind texts. Separated they live in Bookmarksgrove\n                          right at the coast of the Semantics, a large language\n                          ocean. A small river named Duden flows by their place\n                          and supplies it with the necessary regelialia. It is a\n                          paradisematic country, in which roasted parts of\n                          sentences fly into your mouth. Even the all-powerful\n                          Pointing has no control about the blind texts it is an\n                          almost unorthographic life One day however a small\n                          line of blind text by the name of Lorem Ipsum decided\n                          to leave for the far World of Grammar.\n                        </p>\n                      </DialogContent>\n                      <DialogActions className={classes.modalFooter}>\n                        <Button color=\"transparent\">Nice Button</Button>\n                        <Button\n                          onClick={() => setClassicModal(false)}\n                          color=\"danger\"\n                          simple\n                        >\n                          Close\n                        </Button>\n                      </DialogActions>\n                    </Dialog>\n                    <Button\n                      color=\"info\"\n                      round\n                      className={classes.marginRight}\n                      onClick={() => setNoticeModal(true)}\n                    >\n                      Notice Modal\n                    </Button>\n                    <Dialog\n                      classes={{\n                        root: classes.center + \" \" + classes.modalRoot,\n                        paper: classes.modal\n                      }}\n                      open={noticeModal}\n                      TransitionComponent={Transition}\n                      keepMounted\n                      onClose={() => setNoticeModal(false)}\n                      aria-labelledby=\"notice-modal-slide-title\"\n                      aria-describedby=\"notice-modal-slide-description\"\n                    >\n                      <DialogTitle\n                        id=\"notice-modal-slide-title\"\n                        disableTypography\n                        className={classes.modalHeader}\n                      >\n                        <Button\n                          justIcon\n                          className={classes.modalCloseButton}\n                          key=\"close\"\n                          aria-label=\"Close\"\n                          color=\"transparent\"\n                          onClick={() => setNoticeModal(false)}\n                        >\n                          <Close className={classes.modalClose} />\n                        </Button>\n                        <h4 className={classes.modalTitle}>Notice Modal</h4>\n                      </DialogTitle>\n                      <DialogContent\n                        id=\"notice-modal-slide-description\"\n                        className={classes.modalBody}\n                      >\n                        <Instruction\n                          title=\"1. Register\"\n                          text={\n                            <span>\n                              The first step is to create an account at{\" \"}\n                              <a href=\"https://www.creative-tim.com/?ref=mdpr-notifications-page\">\n                                Creative Tim\n                              </a>\n                              . You can choose a social network or go for the\n                              classic version, whatever works best for you.\n                            </span>\n                          }\n                          image={noticeModal1}\n                          className={classes.instructionNoticeModal}\n                          imageClassName={classes.imageNoticeModal}\n                        />\n                        <Instruction\n                          title=\"2. Apply\"\n                          text={\n                            <span>\n                              The first step is to create an account at{\" \"}\n                              <a href=\"https://www.creative-tim.com/?ref=mdpr-notifications-page\">\n                                Creative Tim\n                              </a>\n                              . You can choose a social network or go for the\n                              classic version, whatever works best for you.\n                            </span>\n                          }\n                          image={noticeModal2}\n                          className={classes.instructionNoticeModal}\n                          imageClassName={classes.imageNoticeModal}\n                        />\n                        <p>\n                          If you have more questions, don{\"'\"}t hesitate to\n                          contact us or send us a tweet @creativetim. We{\"'\"}\n                          re here to help!\n                        </p>\n                      </DialogContent>\n                      <DialogActions\n                        className={\n                          classes.modalFooter + \" \" + classes.modalFooterCenter\n                        }\n                      >\n                        <Button\n                          onClick={() => setNoticeModal(false)}\n                          color=\"info\"\n                          round\n                        >\n                          Sounds Good\n                        </Button>\n                      </DialogActions>\n                    </Dialog>\n                    <Button\n                      color=\"rose\"\n                      round\n                      className={classes.marginRight}\n                      onClick={() => setSmallModal(true)}\n                    >\n                      Small alert modal\n                    </Button>\n                    <Dialog\n                      classes={{\n                        root: classes.center + \" \" + classes.modalRoot,\n                        paper: classes.modal + \" \" + classes.modalSmall\n                      }}\n                      open={smallModal}\n                      TransitionComponent={Transition}\n                      keepMounted\n                      onClose={() => setSmallModal(false)}\n                      aria-labelledby=\"small-modal-slide-title\"\n                      aria-describedby=\"small-modal-slide-description\"\n                    >\n                      <DialogTitle\n                        id=\"small-modal-slide-title\"\n                        disableTypography\n                        className={classes.modalHeader}\n                      >\n                        <Button\n                          justIcon\n                          className={classes.modalCloseButton}\n                          key=\"close\"\n                          aria-label=\"Close\"\n                          color=\"transparent\"\n                          onClick={() => setSmallModal(false)}\n                        >\n                          <Close className={classes.modalClose} />\n                        </Button>\n                      </DialogTitle>\n                      <DialogContent\n                        id=\"small-modal-slide-description\"\n                        className={\n                          classes.modalBody + \" \" + classes.modalSmallBody\n                        }\n                      >\n                        <h5>Are you sure you want to do this?</h5>\n                      </DialogContent>\n                      <DialogActions\n                        className={\n                          classes.modalFooter + \" \" + classes.modalFooterCenter\n                        }\n                      >\n                        <Button\n                          onClick={() => setSmallModal(false)}\n                          color=\"transparent\"\n                          className={classes.modalSmallFooterFirstButton}\n                        >\n                          Never Mind\n                        </Button>\n                        <Button\n                          onClick={() => setSmallModal(false)}\n                          color=\"success\"\n                          simple\n                          className={\n                            classes.modalSmallFooterFirstButton +\n                            \" \" +\n                            classes.modalSmallFooterSecondButton\n                          }\n                        >\n                          Yes\n                        </Button>\n                      </DialogActions>\n                    </Dialog>\n                  </GridItem>\n                </GridContainer>\n              </div>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
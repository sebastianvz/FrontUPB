{"ast":null,"code":"import _slicedToArray from \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/layouts/Auth.js\";\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n// import LockOutline from \"@material-ui/icons/LockOutline\";\n// core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-dashboard-pro-react/layouts/authStyle.js\";\nimport stylesLogin from \"assets/jss/material-dashboard-pro-react/views/validationFormsStyle.js\";\nimport login from \"assets/img/loginImageUPB.jpg\";\nvar useStyles = makeStyles(styles);\nvar useStylesLogin = makeStyles(stylesLogin);\nexport default function Pages() {\n  // login form\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      required = _React$useState2[0],\n      setrequired = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      requiredState = _React$useState4[0],\n      setrequiredState = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      loginPassword = _React$useState6[0],\n      setloginPassword = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loginPasswordState = _React$useState8[0],\n      setloginPasswordState = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"cardHidden\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      cardAnimaton = _React$useState10[0],\n      setCardAnimation = _React$useState10[1]; // function that verifies if a string has a given length or not\n\n\n  var verifyLength = function verifyLength(value, length) {\n    if (value.length >= length) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var loginClick = function loginClick() {\n    if (requiredState === \"\") {\n      setrequiredState(\"error\");\n    }\n\n    if (loginPasswordState === \"\") {\n      setloginPasswordState(\"error\");\n    }\n  };\n\n  var wrapper = React.createRef();\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  var classes = useStyles();\n  var classesLogin = useStylesLogin();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.wrapper,\n    ref: wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.fullPage,\n    style: {\n      backgroundImage: \"url(\" + login + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Card, {\n    login: true,\n    className: classes[cardAnimaton],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    className: \"\".concat(classes.cardHeader, \" \").concat(classes.textCenter),\n    color: \"rose\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Log in\"), React.createElement(\"div\", {\n    className: classes.socialLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, [\"fab fa-facebook-square\", \"fab fa-twitter\", \"fab fa-google-plus\"].map(function (prop, key) {\n    return React.createElement(Button, {\n      color: \"transparent\",\n      justIcon: true,\n      key: key,\n      className: classes.customButtonClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: prop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }))), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    success: requiredState === \"success\",\n    error: requiredState === \"error\",\n    labelText: \"Usuario\",\n    id: \"required\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (verifyLength(event.target.value, 0)) {\n          setrequiredState(\"success\");\n        } else {\n          setrequiredState(\"error\");\n        }\n\n        setrequired(event.target.value);\n      },\n      type: \"text\",\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: classes.inputAdornmentIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"lock_outline\"))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(CustomInput, {\n    success: loginPasswordState === \"success\",\n    error: loginPasswordState === \"error\",\n    labelText: \"Contrase\\xF1a\",\n    id: \"loginpassword\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (verifyLength(event.target.value, 1)) {\n          setloginPasswordState(\"success\");\n        } else {\n          setloginPasswordState(\"error\");\n        }\n\n        setloginPassword(event.target.value);\n      },\n      type: \"password\",\n      autoComplete: \"off\",\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: classes.inputAdornmentIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"lock_outline\"))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classesLogin.formCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"*\"), \" Required fields\")), React.createElement(CardFooter, {\n    className: classes.justifyContentCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"rose\",\n    onClick: loginClick,\n    simple: true,\n    size: \"lg\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Let\", \"'\", \"s Go\"))))))))));\n}","map":{"version":3,"sources":["/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/layouts/Auth.js"],"names":["React","makeStyles","InputAdornment","Icon","GridContainer","GridItem","CustomInput","Button","Card","CardBody","CardHeader","CardFooter","styles","stylesLogin","login","useStyles","useStylesLogin","Pages","useState","required","setrequired","requiredState","setrequiredState","loginPassword","setloginPassword","loginPasswordState","setloginPasswordState","cardAnimaton","setCardAnimation","verifyLength","value","length","loginClick","wrapper","createRef","setTimeout","classes","classesLogin","fullPage","backgroundImage","container","cardHeader","textCenter","cardTitle","socialLine","map","prop","key","customButtonClass","fullWidth","onChange","event","target","type","endAdornment","inputAdornmentIcon","autoComplete","formCategory","justifyContentCenter"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n\n// @material-ui/icons\n// import LockOutline from \"@material-ui/icons/LockOutline\";\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\nimport styles from \"assets/jss/material-dashboard-pro-react/layouts/authStyle.js\";\n\nimport stylesLogin from \"assets/jss/material-dashboard-pro-react/views/validationFormsStyle.js\";\n\nimport login from \"assets/img/loginImageUPB.jpg\";\n\nconst useStyles = makeStyles(styles);\nconst useStylesLogin = makeStyles(stylesLogin);\n\nexport default function Pages() {\n  // login form\n  const [required, setrequired] = React.useState(\"\");\n  const [requiredState, setrequiredState] = React.useState(\"\");\n  const [loginPassword, setloginPassword] = React.useState(\"\");\n  const [loginPasswordState, setloginPasswordState] = React.useState(\"\");\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n\n  // function that verifies if a string has a given length or not\n  const verifyLength = (value, length) => {\n    if (value.length >= length) {\n      return true;\n    }\n    return false;\n  };\n\n  const loginClick = () => {\n    if (requiredState === \"\") {\n      setrequiredState(\"error\");\n    }\n    if (loginPasswordState === \"\") {\n      setloginPasswordState(\"error\");\n    }\n  };\n  const wrapper = React.createRef();\n\n  setTimeout(function() {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n  const classesLogin = useStylesLogin();\n  return (\n    <div>\n      <div className={classes.wrapper} ref={wrapper}>\n        <div\n          className={classes.fullPage}\n          style={{ backgroundImage: \"url(\" + login + \")\" }}\n        >\n          <div className={classes.container}>\n            <GridContainer justify=\"center\">\n              <GridItem xs={12} sm={6} md={4}>\n                <form>\n                  <Card login className={classes[cardAnimaton]}>\n                    <CardHeader\n                      className={`${classes.cardHeader} ${classes.textCenter}`}\n                      color=\"rose\"\n                    >\n                      <h4 className={classes.cardTitle}>Log in</h4>\n                      <div className={classes.socialLine}>\n                        {[\n                          \"fab fa-facebook-square\",\n                          \"fab fa-twitter\",\n                          \"fab fa-google-plus\"\n                        ].map((prop, key) => {\n                          return (\n                            <Button\n                              color=\"transparent\"\n                              justIcon\n                              key={key}\n                              className={classes.customButtonClass}\n                            >\n                              <i className={prop} />\n                            </Button>\n                          );\n                        })}\n                      </div>\n                    </CardHeader>\n                    <CardBody>\n                      <CustomInput\n                        success={requiredState === \"success\"}\n                        error={requiredState === \"error\"}\n                        labelText=\"Usuario\"\n                        id=\"required\"\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          onChange: event => {\n                            if (verifyLength(event.target.value, 0)) {\n                              setrequiredState(\"success\");\n                            } else {\n                              setrequiredState(\"error\");\n                            }\n                            setrequired(event.target.value);\n                          },\n                          type: \"text\",\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Icon className={classes.inputAdornmentIcon}>\n                                lock_outline\n                              </Icon>\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                      <CustomInput\n                        success={loginPasswordState === \"success\"}\n                        error={loginPasswordState === \"error\"}\n                        labelText=\"Contraseña\"\n                        id=\"loginpassword\"\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          onChange: event => {\n                            if (verifyLength(event.target.value, 1)) {\n                              setloginPasswordState(\"success\");\n                            } else {\n                              setloginPasswordState(\"error\");\n                            }\n                            setloginPassword(event.target.value);\n                          },\n                          type: \"password\",\n                          autoComplete: \"off\",\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Icon className={classes.inputAdornmentIcon}>\n                                lock_outline\n                              </Icon>\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                      <div className={classesLogin.formCategory}>\n                        <small>*</small> Required fields\n                      </div>\n                    </CardBody>\n                    <CardFooter className={classes.justifyContentCenter}>\n                      <Button\n                        color=\"rose\"\n                        onClick={loginClick}\n                        simple\n                        size=\"lg\"\n                        block\n                      >\n                        Let{\"'\"}s Go\n                      </Button>\n                    </CardFooter>\n                  </Card>\n                </form>\n              </GridItem>\n            </GridContainer>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
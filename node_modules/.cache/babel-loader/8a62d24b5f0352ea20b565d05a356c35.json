{"ast":null,"code":"import _slicedToArray from \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/components/CustomUpload/ImageUpload.js\";\nimport React from \"react\"; // used for making the prop types of this component\n\nimport PropTypes from \"prop-types\"; // core components\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport defaultImage from \"assets/img/image_placeholder.jpg\";\nimport defaultAvatar from \"assets/img/placeholder.jpg\";\nexport default function ImageUpload(props) {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      file = _React$useState2[0],\n      setFile = _React$useState2[1];\n\n  var _React$useState3 = React.useState(props.avatar ? defaultAvatar : defaultImage),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      imagePreviewUrl = _React$useState4[0],\n      setImagePreviewUrl = _React$useState4[1];\n\n  var fileInput = React.createRef();\n\n  var handleImageChange = function handleImageChange(e) {\n    e.preventDefault();\n    var reader = new FileReader();\n    var file = e.target.files[0];\n\n    reader.onloadend = function () {\n      setFile(file);\n      setImagePreviewUrl(reader.result);\n    };\n\n    reader.readAsDataURL(file);\n  }; // eslint-disable-next-line\n\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault(); // file is the file/image uploaded\n    // in this function you can save the image (file) on form submit\n    // you have to call it yourself\n  };\n\n  var handleClick = function handleClick() {\n    fileInput.current.click();\n  };\n\n  var handleRemove = function handleRemove() {\n    setFile(null);\n    setImagePreviewUrl(props.avatar ? defaultAvatar : defaultImage);\n    fileInput.current.value = null;\n  };\n\n  var avatar = props.avatar,\n      addButtonProps = props.addButtonProps,\n      changeButtonProps = props.changeButtonProps,\n      removeButtonProps = props.removeButtonProps;\n  return React.createElement(\"div\", {\n    className: \"fileinput text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleImageChange,\n    ref: fileInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"thumbnail\" + (avatar ? \" img-circle\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imagePreviewUrl,\n    alt: \"...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, file === null ? React.createElement(Button, Object.assign({}, addButtonProps, {\n    onClick: function onClick() {\n      return handleClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), avatar ? \"Add Photo\" : \"Select image\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, Object.assign({}, changeButtonProps, {\n    onClick: function onClick() {\n      return handleClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), \"Change\"), avatar ? React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }) : null, React.createElement(Button, Object.assign({}, removeButtonProps, {\n    onClick: function onClick() {\n      return handleRemove();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), \" Remove\"))));\n}\nImageUpload.propTypes = {\n  avatar: PropTypes.bool,\n  addButtonProps: PropTypes.object,\n  changeButtonProps: PropTypes.object,\n  removeButtonProps: PropTypes.object\n};","map":{"version":3,"sources":["/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/components/CustomUpload/ImageUpload.js"],"names":["React","PropTypes","Button","defaultImage","defaultAvatar","ImageUpload","props","useState","file","setFile","avatar","imagePreviewUrl","setImagePreviewUrl","fileInput","createRef","handleImageChange","e","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","handleSubmit","handleClick","current","click","handleRemove","value","addButtonProps","changeButtonProps","removeButtonProps","propTypes","bool","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\n// core components\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport defaultImage from \"assets/img/image_placeholder.jpg\";\nimport defaultAvatar from \"assets/img/placeholder.jpg\";\n\nexport default function ImageUpload(props) {\n  const [file, setFile] = React.useState(null);\n  const [imagePreviewUrl, setImagePreviewUrl] = React.useState(\n    props.avatar ? defaultAvatar : defaultImage\n  );\n  let fileInput = React.createRef();\n  const handleImageChange = e => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.onloadend = () => {\n      setFile(file);\n      setImagePreviewUrl(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n  // eslint-disable-next-line\n  const handleSubmit = e => {\n    e.preventDefault();\n    // file is the file/image uploaded\n    // in this function you can save the image (file) on form submit\n    // you have to call it yourself\n  };\n  const handleClick = () => {\n    fileInput.current.click();\n  };\n  const handleRemove = () => {\n    setFile(null);\n    setImagePreviewUrl(props.avatar ? defaultAvatar : defaultImage);\n    fileInput.current.value = null;\n  };\n  let { avatar, addButtonProps, changeButtonProps, removeButtonProps } = props;\n  return (\n    <div className=\"fileinput text-center\">\n      <input type=\"file\" onChange={handleImageChange} ref={fileInput} />\n      <div className={\"thumbnail\" + (avatar ? \" img-circle\" : \"\")}>\n        <img src={imagePreviewUrl} alt=\"...\" />\n      </div>\n      <div>\n        {file === null ? (\n          <Button {...addButtonProps} onClick={() => handleClick()}>\n            {avatar ? \"Add Photo\" : \"Select image\"}\n          </Button>\n        ) : (\n          <span>\n            <Button {...changeButtonProps} onClick={() => handleClick()}>\n              Change\n            </Button>\n            {avatar ? <br /> : null}\n            <Button {...removeButtonProps} onClick={() => handleRemove()}>\n              <i className=\"fas fa-times\" /> Remove\n            </Button>\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n\nImageUpload.propTypes = {\n  avatar: PropTypes.bool,\n  addButtonProps: PropTypes.object,\n  changeButtonProps: PropTypes.object,\n  removeButtonProps: PropTypes.object\n};\n"]},"metadata":{},"sourceType":"module"}
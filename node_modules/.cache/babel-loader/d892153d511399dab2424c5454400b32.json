{"ast":null,"code":"import _defineProperty from \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/components/Navbars/AuthNavbar.js\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\"; // @material-ui/icons\n\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\nimport LockOpen from \"@material-ui/icons/LockOpen\";\nimport MonetizationOn from \"@material-ui/icons/MonetizationOn\"; // core components\n\nimport Button from \"components/CustomButtons/Button\";\nimport styles from \"assets/jss/material-dashboard-pro-react/components/authNavbarStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function AuthNavbar(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setOpen(!open);\n  }; // verifies if routeName is the one active (in browser input)\n\n\n  var activeRoute = function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  };\n\n  var classes = useStyles();\n  var color = props.color,\n      brandText = props.brandText;\n  var appBarClasses = cx(_defineProperty({}, \" \" + classes[color], color));\n  var list = React.createElement(List, {\n    className: classes.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    className: classes.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/admin/dashboard\",\n    className: classes.navLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Dashboard, {\n    className: classes.listItemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: \"Dashboard\",\n    disableTypography: true,\n    className: classes.listItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), React.createElement(ListItem, {\n    className: classes.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/auth/pricing-page\",\n    className: cx(classes.navLink, _defineProperty({}, classes.navLinkActive, activeRoute(\"/auth/pricing-page\"))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(MonetizationOn, {\n    className: classes.listItemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: \"Pricing\",\n    disableTypography: true,\n    className: classes.listItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), React.createElement(ListItem, {\n    className: classes.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/auth/register-page\",\n    className: cx(classes.navLink, _defineProperty({}, classes.navLinkActive, activeRoute(\"/auth/register-page\"))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(PersonAdd, {\n    className: classes.listItemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: \"Register\",\n    disableTypography: true,\n    className: classes.listItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))), React.createElement(ListItem, {\n    className: classes.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/auth/login-page\",\n    className: cx(classes.navLink, _defineProperty({}, classes.navLinkActive, activeRoute(\"/auth/login-page\"))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Fingerprint, {\n    className: classes.listItemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: \"Login\",\n    disableTypography: true,\n    className: classes.listItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))), React.createElement(ListItem, {\n    className: classes.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/auth/lock-screen-page\",\n    className: cx(classes.navLink, _defineProperty({}, classes.navLinkActive, activeRoute(\"/auth/lock-screen-page\"))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(LockOpen, {\n    className: classes.listItemIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: \"Lock\",\n    disableTypography: true,\n    className: classes.listItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))));\n  return React.createElement(AppBar, {\n    position: \"static\",\n    className: classes.appBar + appBarClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    smDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Button, {\n    href: \"#\",\n    className: classes.title,\n    color: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, brandText))), React.createElement(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Button, {\n    href: \"#\",\n    className: classes.title,\n    color: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"MD Pro React\"))), React.createElement(Hidden, {\n    smDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, list), React.createElement(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.sidebarButton,\n    color: \"transparent\",\n    justIcon: true,\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }))), React.createElement(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: \"right\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    onClose: handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, list)))));\n}\nAuthNavbar.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  brandText: PropTypes.string\n};","map":{"version":3,"sources":["/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/components/Navbars/AuthNavbar.js"],"names":["React","cx","PropTypes","NavLink","makeStyles","AppBar","Toolbar","Hidden","Drawer","List","ListItem","ListItemText","Dashboard","Menu","PersonAdd","Fingerprint","LockOpen","MonetizationOn","Button","styles","useStyles","AuthNavbar","props","useState","open","setOpen","handleDrawerToggle","activeRoute","routeName","window","location","href","indexOf","classes","color","brandText","appBarClasses","list","listItem","navLink","listItemIcon","listItemText","navLinkActive","appBar","container","flex","title","sidebarButton","paper","drawerPaper","keepMounted","propTypes","oneOf","string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,cAAP,MAA2B,mCAA3B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,OAAOC,MAAP,MAAmB,uEAAnB;AAEA,IAAMC,SAAS,GAAGhB,UAAU,CAACe,MAAD,CAA5B;AAEA,eAAe,SAASE,UAAT,CAAoBC,KAApB,EAA2B;AAAA,wBAChBtB,KAAK,CAACuB,QAAN,CAAe,KAAf,CADgB;AAAA;AAAA,MACjCC,IADiC;AAAA,MAC3BC,OAD2B;;AAExC,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BD,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD,CAFwC,CAKxC;;;AACA,MAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,SAAS,EAAI;AAC/B,WAAOC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6BJ,SAA7B,IAA0C,CAAC,CAA3C,GAA+C,IAA/C,GAAsD,KAA7D;AACD,GAFD;;AAGA,MAAMK,OAAO,GAAGb,SAAS,EAAzB;AATwC,MAUhCc,KAVgC,GAUXZ,KAVW,CAUhCY,KAVgC;AAAA,MAUzBC,SAVyB,GAUXb,KAVW,CAUzBa,SAVyB;AAWxC,MAAMC,aAAa,GAAGnC,EAAE,qBACrB,MAAMgC,OAAO,CAACC,KAAD,CADQ,EACEA,KADF,EAAxB;AAGA,MAAIG,IAAI,GACN,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACI,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEJ,OAAO,CAACK,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAE,kBAAb;AAAiC,IAAA,SAAS,EAAEL,OAAO,CAACM,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEN,OAAO,CAACO,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE,WADX;AAEE,IAAA,iBAAiB,EAAE,IAFrB;AAGE,IAAA,SAAS,EAAEP,OAAO,CAACQ,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,EAWE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAER,OAAO,CAACK,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,EAAE,EAAE,oBADN;AAEE,IAAA,SAAS,EAAErC,EAAE,CAACgC,OAAO,CAACM,OAAT,sBACVN,OAAO,CAACS,aADE,EACcf,WAAW,CAAC,oBAAD,CADzB,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEM,OAAO,CAACO,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE,SADX;AAEE,IAAA,iBAAiB,EAAE,IAFrB;AAGE,IAAA,SAAS,EAAEP,OAAO,CAACQ,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CAXF,EA0BE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAER,OAAO,CAACK,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,EAAE,EAAE,qBADN;AAEE,IAAA,SAAS,EAAErC,EAAE,CAACgC,OAAO,CAACM,OAAT,sBACVN,OAAO,CAACS,aADE,EACcf,WAAW,CAAC,qBAAD,CADzB,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEM,OAAO,CAACO,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE,UADX;AAEE,IAAA,iBAAiB,EAAE,IAFrB;AAGE,IAAA,SAAS,EAAEP,OAAO,CAACQ,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CA1BF,EAyCE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAER,OAAO,CAACK,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,EAAE,EAAE,kBADN;AAEE,IAAA,SAAS,EAAErC,EAAE,CAACgC,OAAO,CAACM,OAAT,sBACVN,OAAO,CAACS,aADE,EACcf,WAAW,CAAC,kBAAD,CADzB,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEM,OAAO,CAACO,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE,OADX;AAEE,IAAA,iBAAiB,EAAE,IAFrB;AAGE,IAAA,SAAS,EAAEP,OAAO,CAACQ,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CAzCF,EAwDE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAER,OAAO,CAACK,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,EAAE,EAAE,wBADN;AAEE,IAAA,SAAS,EAAErC,EAAE,CAACgC,OAAO,CAACM,OAAT,sBACVN,OAAO,CAACS,aADE,EACcf,WAAW,CAAC,wBAAD,CADzB,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEM,OAAO,CAACO,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE,MADX;AAEE,IAAA,iBAAiB,EAAE,IAFrB;AAGE,IAAA,SAAS,EAAEP,OAAO,CAACQ,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CAxDF,CADF;AA0EA,SACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAER,OAAO,CAACU,MAAR,GAAiBP,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEH,OAAO,CAACW,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACY,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,SAAS,EAAEZ,OAAO,CAACa,KAApC;AAA2C,IAAA,KAAK,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,SADH,CADF,CADF,CADF,EAQE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACY,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,SAAS,EAAEZ,OAAO,CAACa,KAApC;AAA2C,IAAA,KAAK,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CARF,EAeE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBT,IAAhB,CAfF,EAgBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEJ,OAAO,CAACc,aADrB;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,QAAQ,MAHV;AAIE,kBAAW,aAJb;AAKE,IAAA,OAAO,EAAErB,kBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CAhBF,EA2BE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,MAAM,EAAE,OAFV;AAGE,IAAA,IAAI,EAAEF,IAHR;AAIE,IAAA,OAAO,EAAE;AACPwB,MAAAA,KAAK,EAAEf,OAAO,CAACgB;AADR,KAJX;AAOE,IAAA,OAAO,EAAEvB,kBAPX;AAQE,IAAA,UAAU,EAAE;AACVwB,MAAAA,WAAW,EAAE,IADH,CACQ;;AADR,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGb,IAZH,CADF,CADF,CA3BF,CADF,CADF;AAkDD;AAEDhB,UAAU,CAAC8B,SAAX,GAAuB;AACrBjB,EAAAA,KAAK,EAAEhC,SAAS,CAACkD,KAAV,CAAgB,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,EAA+B,SAA/B,EAA0C,QAA1C,CAAhB,CADc;AAErBjB,EAAAA,SAAS,EAAEjC,SAAS,CAACmD;AAFA,CAAvB","sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\n// @material-ui/icons\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\nimport LockOpen from \"@material-ui/icons/LockOpen\";\nimport MonetizationOn from \"@material-ui/icons/MonetizationOn\";\n\n// core components\nimport Button from \"components/CustomButtons/Button\";\n\nimport styles from \"assets/jss/material-dashboard-pro-react/components/authNavbarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function AuthNavbar(props) {\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerToggle = () => {\n    setOpen(!open);\n  };\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = routeName => {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  };\n  const classes = useStyles();\n  const { color, brandText } = props;\n  const appBarClasses = cx({\n    [\" \" + classes[color]]: color\n  });\n  var list = (\n    <List className={classes.list}>\n      <ListItem className={classes.listItem}>\n        <NavLink to={\"/admin/dashboard\"} className={classes.navLink}>\n          <Dashboard className={classes.listItemIcon} />\n          <ListItemText\n            primary={\"Dashboard\"}\n            disableTypography={true}\n            className={classes.listItemText}\n          />\n        </NavLink>\n      </ListItem>\n      <ListItem className={classes.listItem}>\n        <NavLink\n          to={\"/auth/pricing-page\"}\n          className={cx(classes.navLink, {\n            [classes.navLinkActive]: activeRoute(\"/auth/pricing-page\")\n          })}\n        >\n          <MonetizationOn className={classes.listItemIcon} />\n          <ListItemText\n            primary={\"Pricing\"}\n            disableTypography={true}\n            className={classes.listItemText}\n          />\n        </NavLink>\n      </ListItem>\n      <ListItem className={classes.listItem}>\n        <NavLink\n          to={\"/auth/register-page\"}\n          className={cx(classes.navLink, {\n            [classes.navLinkActive]: activeRoute(\"/auth/register-page\")\n          })}\n        >\n          <PersonAdd className={classes.listItemIcon} />\n          <ListItemText\n            primary={\"Register\"}\n            disableTypography={true}\n            className={classes.listItemText}\n          />\n        </NavLink>\n      </ListItem>\n      <ListItem className={classes.listItem}>\n        <NavLink\n          to={\"/auth/login-page\"}\n          className={cx(classes.navLink, {\n            [classes.navLinkActive]: activeRoute(\"/auth/login-page\")\n          })}\n        >\n          <Fingerprint className={classes.listItemIcon} />\n          <ListItemText\n            primary={\"Login\"}\n            disableTypography={true}\n            className={classes.listItemText}\n          />\n        </NavLink>\n      </ListItem>\n      <ListItem className={classes.listItem}>\n        <NavLink\n          to={\"/auth/lock-screen-page\"}\n          className={cx(classes.navLink, {\n            [classes.navLinkActive]: activeRoute(\"/auth/lock-screen-page\")\n          })}\n        >\n          <LockOpen className={classes.listItemIcon} />\n          <ListItemText\n            primary={\"Lock\"}\n            disableTypography={true}\n            className={classes.listItemText}\n          />\n        </NavLink>\n      </ListItem>\n    </List>\n  );\n  return (\n    <AppBar position=\"static\" className={classes.appBar + appBarClasses}>\n      <Toolbar className={classes.container}>\n        <Hidden smDown>\n          <div className={classes.flex}>\n            <Button href=\"#\" className={classes.title} color=\"transparent\">\n              {brandText}\n            </Button>\n          </div>\n        </Hidden>\n        <Hidden mdUp>\n          <div className={classes.flex}>\n            <Button href=\"#\" className={classes.title} color=\"transparent\">\n              MD Pro React\n            </Button>\n          </div>\n        </Hidden>\n        <Hidden smDown>{list}</Hidden>\n        <Hidden mdUp>\n          <Button\n            className={classes.sidebarButton}\n            color=\"transparent\"\n            justIcon\n            aria-label=\"open drawer\"\n            onClick={handleDrawerToggle}\n          >\n            <Menu />\n          </Button>\n        </Hidden>\n        <Hidden mdUp>\n          <Hidden mdUp>\n            <Drawer\n              variant=\"temporary\"\n              anchor={\"right\"}\n              open={open}\n              classes={{\n                paper: classes.drawerPaper\n              }}\n              onClose={handleDrawerToggle}\n              ModalProps={{\n                keepMounted: true // Better open performance on mobile.\n              }}\n            >\n              {list}\n            </Drawer>\n          </Hidden>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nAuthNavbar.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  brandText: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}
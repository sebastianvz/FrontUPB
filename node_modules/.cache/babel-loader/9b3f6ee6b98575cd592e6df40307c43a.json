{"ast":null,"code":"import _slicedToArray from \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/layouts/Auth.js\";\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Email from \"@material-ui/icons/Email\"; // import LockOutline from \"@material-ui/icons/LockOutline\";\n// core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-dashboard-pro-react/layouts/authStyle.js\";\nimport login from \"assets/img/loginImageUPB.jpg\";\nvar useStyles = makeStyles(styles);\nexport default function Pages() {\n  // login form\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loginEmail = _React$useState2[0],\n      setloginEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loginEmailState = _React$useState4[0],\n      setloginEmailState = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      loginPassword = _React$useState6[0],\n      setloginPassword = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loginPasswordState = _React$useState8[0],\n      setloginPasswordState = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"cardHidden\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      cardAnimaton = _React$useState10[0],\n      setCardAnimation = _React$useState10[1]; // function that returns true if value is email, false otherwise\n\n\n  var verifyEmail = function verifyEmail(value) {\n    var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (emailRex.test(value)) {\n      return true;\n    }\n\n    return false;\n  }; // function that verifies if a string has a given length or not\n\n\n  var verifyLength = function verifyLength(value, length) {\n    if (value.length >= length) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var loginClick = function loginClick() {\n    if (loginEmailState === \"\") {\n      setloginEmailState(\"error\");\n    }\n\n    if (loginPasswordState === \"\") {\n      setloginPasswordState(\"error\");\n    }\n  };\n\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  var classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.wrapper,\n    ref: wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.fullPage,\n    style: {\n      backgroundImage: \"url(\" + login + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Card, {\n    login: true,\n    className: classes[cardAnimaton],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    className: \"\".concat(classes.cardHeader, \" \").concat(classes.textCenter),\n    color: \"rose\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Log in\"), React.createElement(\"div\", {\n    className: classes.socialLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, [\"fab fa-facebook-square\", \"fab fa-twitter\", \"fab fa-google-plus\"].map(function (prop, key) {\n    return React.createElement(Button, {\n      color: \"transparent\",\n      justIcon: true,\n      key: key,\n      className: classes.customButtonClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: prop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }))), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    success: requiredState === \"success\",\n    error: requiredState === \"error\",\n    id: \"required\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (verifyLength(event.target.value, 0)) {\n          setrequiredState(\"success\");\n        } else {\n          setrequiredState(\"error\");\n        }\n\n        setrequired(event.target.value);\n      },\n      type: \"text\",\n      endAdornment: requiredState === \"error\" ? React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Close, {\n        className: classes.danger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })) : undefined\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(CustomInput, {\n    success: loginPasswordState === \"success\",\n    error: loginPasswordState === \"error\",\n    labelText: \"Password *\",\n    id: \"loginpassword\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (verifyLength(event.target.value, 1)) {\n          setloginPasswordState(\"success\");\n        } else {\n          setloginPasswordState(\"error\");\n        }\n\n        setloginPassword(event.target.value);\n      },\n      type: \"password\",\n      autoComplete: \"off\",\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: classes.inputAdornmentIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"lock_outline\"))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.formCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"*\"), \" Required fields\")), React.createElement(CardFooter, {\n    className: classes.justifyContentCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"rose\",\n    onClick: loginClick,\n    simple: true,\n    size: \"lg\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Let\", \"'\", \"s Go\"))))))))));\n}","map":{"version":3,"sources":["/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/layouts/Auth.js"],"names":["React","makeStyles","InputAdornment","Icon","Email","GridContainer","GridItem","CustomInput","Button","Card","CardBody","CardHeader","CardFooter","styles","login","useStyles","Pages","useState","loginEmail","setloginEmail","loginEmailState","setloginEmailState","loginPassword","setloginPassword","loginPasswordState","setloginPasswordState","cardAnimaton","setCardAnimation","verifyEmail","value","emailRex","test","verifyLength","length","loginClick","setTimeout","classes","wrapper","fullPage","backgroundImage","container","cardHeader","textCenter","cardTitle","socialLine","map","prop","key","customButtonClass","requiredState","fullWidth","onChange","event","target","setrequiredState","setrequired","type","endAdornment","danger","undefined","autoComplete","inputAdornmentIcon","formCategory","justifyContentCenter"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n\n// @material-ui/icons\nimport Email from \"@material-ui/icons/Email\";\n// import LockOutline from \"@material-ui/icons/LockOutline\";\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\nimport styles from \"assets/jss/material-dashboard-pro-react/layouts/authStyle.js\";\n\nimport login from \"assets/img/loginImageUPB.jpg\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Pages() {\n  // login form\n  const [loginEmail, setloginEmail] = React.useState(\"\");\n  const [loginEmailState, setloginEmailState] = React.useState(\"\");\n  const [loginPassword, setloginPassword] = React.useState(\"\");\n  const [loginPasswordState, setloginPasswordState] = React.useState(\"\");\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n\n  // function that returns true if value is email, false otherwise\n  const verifyEmail = value => {\n    var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (emailRex.test(value)) {\n      return true;\n    }\n    return false;\n  };\n\n  // function that verifies if a string has a given length or not\n  const verifyLength = (value, length) => {\n    if (value.length >= length) {\n      return true;\n    }\n    return false;\n  };\n\n  const loginClick = () => {\n    if (loginEmailState === \"\") {\n      setloginEmailState(\"error\");\n    }\n    if (loginPasswordState === \"\") {\n      setloginPasswordState(\"error\");\n    }\n  };\n\n  setTimeout(function() {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.wrapper} ref={wrapper}>\n        <div\n          className={classes.fullPage}\n          style={{ backgroundImage: \"url(\" + login + \")\" }}\n        >\n          <div className={classes.container}>\n            <GridContainer justify=\"center\">\n              <GridItem xs={12} sm={6} md={4}>\n                <form>\n                  <Card login className={classes[cardAnimaton]}>\n                    <CardHeader\n                      className={`${classes.cardHeader} ${classes.textCenter}`}\n                      color=\"rose\"\n                    >\n                      <h4 className={classes.cardTitle}>Log in</h4>\n                      <div className={classes.socialLine}>\n                        {[\n                          \"fab fa-facebook-square\",\n                          \"fab fa-twitter\",\n                          \"fab fa-google-plus\"\n                        ].map((prop, key) => {\n                          return (\n                            <Button\n                              color=\"transparent\"\n                              justIcon\n                              key={key}\n                              className={classes.customButtonClass}\n                            >\n                              <i className={prop} />\n                            </Button>\n                          );\n                        })}\n                      </div>\n                    </CardHeader>\n                    <CardBody>\n                      <CustomInput\n                        success={requiredState === \"success\"}\n                        error={requiredState === \"error\"}\n                        id=\"required\"\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          onChange: event => {\n                            if (verifyLength(event.target.value, 0)) {\n                              setrequiredState(\"success\");\n                            } else {\n                              setrequiredState(\"error\");\n                            }\n                            setrequired(event.target.value);\n                          },\n                          type: \"text\",\n                          endAdornment:\n                            requiredState === \"error\" ? (\n                              <InputAdornment position=\"end\">\n                                <Close className={classes.danger} />\n                              </InputAdornment>\n                            ) : (\n                              undefined\n                            )\n                        }}\n                      />\n                      <CustomInput\n                        success={loginPasswordState === \"success\"}\n                        error={loginPasswordState === \"error\"}\n                        labelText=\"Password *\"\n                        id=\"loginpassword\"\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          onChange: event => {\n                            if (verifyLength(event.target.value, 1)) {\n                              setloginPasswordState(\"success\");\n                            } else {\n                              setloginPasswordState(\"error\");\n                            }\n                            setloginPassword(event.target.value);\n                          },\n                          type: \"password\",\n                          autoComplete: \"off\",\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Icon className={classes.inputAdornmentIcon}>\n                                lock_outline\n                              </Icon>\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                      <div className={classes.formCategory}>\n                        <small>*</small> Required fields\n                      </div>\n                    </CardBody>\n                    <CardFooter className={classes.justifyContentCenter}>\n                      <Button\n                        color=\"rose\"\n                        onClick={loginClick}\n                        simple\n                        size=\"lg\"\n                        block\n                      >\n                        Let{\"'\"}s Go\n                      </Button>\n                    </CardFooter>\n                  </Card>\n                </form>\n              </GridItem>\n            </GridContainer>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
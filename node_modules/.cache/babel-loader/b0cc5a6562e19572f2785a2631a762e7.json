{"ast":null,"code":"import _defineProperty from \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/layouts/Admin.js\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { Switch, Route, Redirect } from \"react-router-dom\"; // creates a beautiful scrollbar\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\nimport routes from \"routes.js\";\nimport styles from \"assets/jss/material-dashboard-pro-react/layouts/adminStyle.js\";\nvar ps;\nvar useStyles = makeStyles(styles);\nexport default function Dashboard(props) {\n  var _cx;\n\n  var rest = _extends({}, props); // states and functions\n\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mobileOpen = _React$useState2[0],\n      setMobileOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      miniActive = _React$useState4[0],\n      setMiniActive = _React$useState4[1];\n\n  var _React$useState5 = React.useState(require(\"assets/img/sidebar-2.jpg\")),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      image = _React$useState6[0],\n      setImage = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"blue\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      color = _React$useState8[0],\n      setColor = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"black\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      bgColor = _React$useState10[0],\n      setBgColor = _React$useState10[1]; // const [hasImage, setHasImage] = React.useState(true);\n\n\n  var _React$useState11 = React.useState(\"dropdown\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      fixedClasses = _React$useState12[0],\n      setFixedClasses = _React$useState12[1];\n\n  var _React$useState13 = React.useState(require(\"assets/img/logo-white.svg\")),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      logo = _React$useState14[0],\n      setLogo = _React$useState14[1]; // styles\n\n\n  var classes = useStyles();\n  var mainPanelClasses = classes.mainPanel + \" \" + cx((_cx = {}, _defineProperty(_cx, classes.mainPanelSidebarMini, miniActive), _defineProperty(_cx, classes.mainPanelWithPerfectScrollbar, navigator.platform.indexOf(\"Win\") > -1), _cx)); // ref for main panel div\n\n  var mainPanel = React.createRef(); // effect instead of componentDidMount, componentDidUpdate and componentWillUnmount\n\n  React.useEffect(function () {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n\n    window.addEventListener(\"resize\", resizeFunction); // Specify how to clean up after this effect:\n\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }); // functions for changeing the states from components\n\n  var handleImageClick = function handleImageClick(image) {\n    setImage(image);\n  };\n\n  var handleColorClick = function handleColorClick(color) {\n    setColor(color);\n  };\n\n  var handleBgColorClick = function handleBgColorClick(bgColor) {\n    switch (bgColor) {\n      case \"white\":\n        setLogo(require(\"assets/img/logo.svg\"));\n        break;\n\n      default:\n        setLogo(require(\"assets/img/logo-white.svg\"));\n        break;\n    }\n\n    setBgColor(bgColor);\n  };\n\n  var handleFixedClick = function handleFixedClick() {\n    if (fixedClasses === \"dropdown\") {\n      setFixedClasses(\"dropdown show\");\n    } else {\n      setFixedClasses(\"dropdown\");\n    }\n  };\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  };\n\n  var getRoute = function getRoute() {\n    return window.location.pathname !== \"/admin/full-screen-maps\";\n  };\n\n  var getActiveRoute = function getActiveRoute(routes) {\n    var activeRoute = \"Default Brand Text\";\n\n    for (var i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        var collapseActiveRoute = getActiveRoute(routes[i].views);\n\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else {\n        if (window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1) {\n          return routes[i].name;\n        }\n      }\n    }\n\n    return activeRoute;\n  };\n\n  var getRoutes = function getRoutes(routes) {\n    return routes.map(function (prop, key) {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n\n      if (prop.layout === \"/admin\") {\n        return React.createElement(Route, {\n          path: prop.layout + prop.path,\n          component: prop.component,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        });\n      } else {\n        return null;\n      }\n    });\n  };\n\n  var sidebarMinimize = function sidebarMinimize() {\n    setMiniActive(!miniActive);\n  };\n\n  var resizeFunction = function resizeFunction() {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Sidebar, Object.assign({\n    routes: routes,\n    logoText: \"Creative Tim\",\n    logo: logo,\n    image: image,\n    handleDrawerToggle: handleDrawerToggle,\n    open: mobileOpen,\n    color: color,\n    bgColor: bgColor,\n    miniActive: miniActive\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: mainPanelClasses,\n    ref: mainPanel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(AdminNavbar, Object.assign({\n    sidebarMinimize: sidebarMinimize.bind(this),\n    miniActive: miniActive,\n    brandText: getActiveRoute(routes),\n    handleDrawerToggle: handleDrawerToggle\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })), getRoute() ? React.createElement(\"div\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, getRoutes(routes), React.createElement(Redirect, {\n    from: \"/admin\",\n    to: \"/admin/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })))) : React.createElement(\"div\", {\n    className: classes.map,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, getRoutes(routes), React.createElement(Redirect, {\n    from: \"/admin\",\n    to: \"/admin/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }))), getRoute() ? React.createElement(Footer, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }) : null, React.createElement(FixedPlugin, {\n    handleImageClick: handleImageClick,\n    handleColorClick: handleColorClick,\n    handleBgColorClick: handleBgColorClick,\n    color: color,\n    bgColor: bgColor,\n    bgImage: image,\n    handleFixedClick: handleFixedClick,\n    fixedClasses: fixedClasses,\n    sidebarMinimize: sidebarMinimize.bind(this),\n    miniActive: miniActive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/layouts/Admin.js"],"names":["React","cx","Switch","Route","Redirect","PerfectScrollbar","makeStyles","AdminNavbar","Footer","Sidebar","FixedPlugin","routes","styles","ps","useStyles","Dashboard","props","rest","useState","mobileOpen","setMobileOpen","miniActive","setMiniActive","require","image","setImage","color","setColor","bgColor","setBgColor","fixedClasses","setFixedClasses","logo","setLogo","classes","mainPanelClasses","mainPanel","mainPanelSidebarMini","mainPanelWithPerfectScrollbar","navigator","platform","indexOf","createRef","useEffect","current","suppressScrollX","suppressScrollY","document","body","style","overflow","window","addEventListener","resizeFunction","cleanup","destroy","removeEventListener","handleImageClick","handleColorClick","handleBgColorClick","handleFixedClick","handleDrawerToggle","getRoute","location","pathname","getActiveRoute","activeRoute","i","length","collapse","collapseActiveRoute","views","href","layout","path","name","getRoutes","map","prop","key","component","sidebarMinimize","innerWidth","wrapper","bind","content","container"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"routes.js\";\n\nimport styles from \"assets/jss/material-dashboard-pro-react/layouts/adminStyle.js\";\n\nvar ps;\n\nconst useStyles = makeStyles(styles);\n\nexport default function Dashboard(props) {\n  const { ...rest } = props;\n  // states and functions\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [miniActive, setMiniActive] = React.useState(false);\n  const [image, setImage] = React.useState(require(\"assets/img/sidebar-2.jpg\"));\n  const [color, setColor] = React.useState(\"blue\");\n  const [bgColor, setBgColor] = React.useState(\"black\");\n  // const [hasImage, setHasImage] = React.useState(true);\n  const [fixedClasses, setFixedClasses] = React.useState(\"dropdown\");\n  const [logo, setLogo] = React.useState(require(\"assets/img/logo-white.svg\"));\n  // styles\n  const classes = useStyles();\n  const mainPanelClasses =\n    classes.mainPanel +\n    \" \" +\n    cx({\n      [classes.mainPanelSidebarMini]: miniActive,\n      [classes.mainPanelWithPerfectScrollbar]:\n        navigator.platform.indexOf(\"Win\") > -1\n    });\n  // ref for main panel div\n  const mainPanel = React.createRef();\n  // effect instead of componentDidMount, componentDidUpdate and componentWillUnmount\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", resizeFunction);\n\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  });\n  // functions for changeing the states from components\n  const handleImageClick = image => {\n    setImage(image);\n  };\n  const handleColorClick = color => {\n    setColor(color);\n  };\n  const handleBgColorClick = bgColor => {\n    switch (bgColor) {\n      case \"white\":\n        setLogo(require(\"assets/img/logo.svg\"));\n        break;\n      default:\n        setLogo(require(\"assets/img/logo-white.svg\"));\n        break;\n    }\n    setBgColor(bgColor);\n  };\n  const handleFixedClick = () => {\n    if (fixedClasses === \"dropdown\") {\n      setFixedClasses(\"dropdown show\");\n    } else {\n      setFixedClasses(\"dropdown\");\n    }\n  };\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin/full-screen-maps\";\n  };\n  const getActiveRoute = routes => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n  const getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const sidebarMinimize = () => {\n    setMiniActive(!miniActive);\n  };\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <Sidebar\n        routes={routes}\n        logoText={\"Creative Tim\"}\n        logo={logo}\n        image={image}\n        handleDrawerToggle={handleDrawerToggle}\n        open={mobileOpen}\n        color={color}\n        bgColor={bgColor}\n        miniActive={miniActive}\n        {...rest}\n      />\n      <div className={mainPanelClasses} ref={mainPanel}>\n        <AdminNavbar\n          sidebarMinimize={sidebarMinimize.bind(this)}\n          miniActive={miniActive}\n          brandText={getActiveRoute(routes)}\n          handleDrawerToggle={handleDrawerToggle}\n          {...rest}\n        />\n        {/* On the /maps/full-screen-maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n        {getRoute() ? (\n          <div className={classes.content}>\n            <div className={classes.container}>\n              <Switch>\n                {getRoutes(routes)}\n                <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\n              </Switch>\n            </div>\n          </div>\n        ) : (\n          <div className={classes.map}>\n            <Switch>\n              {getRoutes(routes)}\n              <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\n            </Switch>\n          </div>\n        )}\n        {getRoute() ? <Footer fluid /> : null}\n        <FixedPlugin\n          handleImageClick={handleImageClick}\n          handleColorClick={handleColorClick}\n          handleBgColorClick={handleBgColorClick}\n          color={color}\n          bgColor={bgColor}\n          bgImage={image}\n          handleFixedClick={handleFixedClick}\n          fixedClasses={fixedClasses}\n          sidebarMinimize={sidebarMinimize.bind(this)}\n          miniActive={miniActive}\n        />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/ngarci12/Desktop/FrontUPB/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ngarci12/Desktop/FrontUPB/src/views/Forms/ValidationForms.js\";\n\n/*eslint-disable*/\nimport React from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\"; // material ui icons\n\nimport MailOutline from \"@material-ui/icons/MailOutline\";\nimport Contacts from \"@material-ui/icons/Contacts\";\nimport Check from \"@material-ui/icons/Check\";\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardText from \"components/Card/CardText.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\"; // style for this view\n\nimport styles from \"assets/jss/material-dashboard-pro-react/views/validationFormsStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function ValidationForms() {\n  // type validation\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      required = _React$useState2[0],\n      setrequired = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      requiredState = _React$useState4[0],\n      setrequiredState = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      typeEmail = _React$useState6[0],\n      settypeEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      typeEmailState = _React$useState8[0],\n      settypeEmailState = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      number = _React$useState10[0],\n      setnumber = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      numberState = _React$useState12[0],\n      setnumberState = _React$useState12[1];\n\n  var _React$useState13 = React.useState(\"\"),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      url = _React$useState14[0],\n      seturl = _React$useState14[1];\n\n  var _React$useState15 = React.useState(\"\"),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      urlState = _React$useState16[0],\n      seturlState = _React$useState16[1];\n\n  var _React$useState17 = React.useState(\"\"),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      equalTo = _React$useState18[0],\n      setequalTo = _React$useState18[1];\n\n  var _React$useState19 = React.useState(\"\"),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      whichEqualTo = _React$useState20[0],\n      setwhichEqualTo = _React$useState20[1];\n\n  var _React$useState21 = React.useState(\"\"),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      equalToState = _React$useState22[0],\n      setequalToState = _React$useState22[1]; // function that returns true if value is email, false otherwise\n\n\n  var verifyEmail = function verifyEmail(value) {\n    var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (emailRex.test(value)) {\n      return true;\n    }\n\n    return false;\n  }; // function that verifies if a string has a given length or not\n\n\n  var verifyLength = function verifyLength(value, length) {\n    if (value.length >= length) {\n      return true;\n    }\n\n    return false;\n  }; // function that verifies if value contains only numbers\n\n\n  var verifyNumber = function verifyNumber(value) {\n    var numberRex = new RegExp(\"^[0-9]+$\");\n\n    if (numberRex.test(value)) {\n      return true;\n    }\n\n    return false;\n  }; // verifies if value is a valid URL\n\n\n  var verifyUrl = function verifyUrl(value) {\n    try {\n      new URL(value);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n\n  var typeClick = function typeClick() {\n    if (requiredState === \"\") {\n      setrequiredState(\"error\");\n    }\n\n    if (typeEmailState === \"\") {\n      settypeEmailState(\"error\");\n    }\n\n    if (numberState === \"\") {\n      setnumberState(\"error\");\n    }\n\n    if (urlState === \"\") {\n      seturlState(\"error\");\n    }\n\n    if (equalToState === \"\") {\n      setequalToState(\"error\");\n    }\n  };\n\n  var classes = useStyles();\n  return React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"danger\",\n    text: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    color: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Usuarios\"))), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Datos personales\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.labelHorizontal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Required Text\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    success: requiredState === \"success\",\n    error: requiredState === \"error\",\n    id: \"required\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (verifyLength(event.target.value, 0)) {\n          setrequiredState(\"success\");\n        } else {\n          setrequiredState(\"error\");\n        }\n\n        setrequired(event.target.value);\n      },\n      type: \"text\",\n      endAdornment: requiredState === \"error\" ? React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Close, {\n        className: classes.danger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })) : undefined\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.labelLeftHorizontal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"required\")))), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.labelHorizontal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Required Text\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    success: requiredState === \"success\",\n    error: requiredState === \"error\",\n    id: \"required\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (verifyLength(event.target.value, 0)) {\n          setrequiredState(\"success\");\n        } else {\n          setrequiredState(\"error\");\n        }\n\n        setrequired(event.target.value);\n      },\n      type: \"text\",\n      endAdornment: requiredState === \"error\" ? React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Close, {\n        className: classes.danger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })) : undefined\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.labelLeftHorizontal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"required\")))), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.labelHorizontal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Email\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    success: typeEmailState === \"success\",\n    error: typeEmailState === \"error\",\n    id: \"typeemail\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (verifyEmail(event.target.value)) {\n          settypeEmailState(\"success\");\n        } else {\n          settypeEmailState(\"error\");\n        }\n\n        settypeEmail(event.target.value);\n      },\n      type: \"email\",\n      endAdornment: typeEmailState === \"error\" ? React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Close, {\n        className: classes.danger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      })) : undefined\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.labelLeftHorizontal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"email\")))), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.labelHorizontal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Email\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    success: typeEmailState === \"success\",\n    error: typeEmailState === \"error\",\n    id: \"typeemail\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (verifyEmail(event.target.value)) {\n          settypeEmailState(\"success\");\n        } else {\n          settypeEmailState(\"error\");\n        }\n\n        settypeEmail(event.target.value);\n      },\n      type: \"email\",\n      endAdornment: typeEmailState === \"error\" ? React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Close, {\n        className: classes.danger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })) : undefined\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.labelLeftHorizontal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, \"email\")))), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"Datos login\"), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.labelHorizontal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"Usuario\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    success: requiredState === \"success\",\n    error: requiredState === \"error\",\n    id: \"required\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (verifyLength(event.target.value, 0)) {\n          setrequiredState(\"success\");\n        } else {\n          setrequiredState(\"error\");\n        }\n\n        setrequired(event.target.value);\n      },\n      type: \"text\",\n      endAdornment: requiredState === \"error\" ? React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Close, {\n        className: classes.danger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      })) : undefined\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }))), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.labelHorizontal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, \"Contrase\\xF1a\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    success: equalToState === \"success\",\n    error: equalToState === \"error\",\n    id: \"equalto\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        return setequalTo(event.target.value);\n      },\n      type: \"password\",\n      endAdornment: equalToState === \"error\" ? React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Close, {\n        className: classes.danger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      })) : undefined\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.labelHorizontal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, \"Confirmar contrase\\xF1a\")), React.createElement(GridItem, {\n    xs: 12,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    success: equalToState === \"success\",\n    error: equalToState === \"error\",\n    id: \"whichequalto\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (equalTo === event.target.value) {\n          setequalToState(\"success\");\n        } else {\n          setequalToState(\"error\");\n        }\n\n        setwhichEqualTo(event.target.value);\n      },\n      type: \"password\",\n      endAdornment: equalToState === \"error\" ? React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(Close, {\n        className: classes.danger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      })) : undefined\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    className: classes.labelLeftHorizontal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  }, React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, \"equalTo\")))))), React.createElement(CardFooter, {\n    className: classes.justifyContentCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"danger\",\n    onClick: typeClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }, \"Guardar\"), React.createElement(Button, {\n    color: \"Primary\",\n    onClick: typeClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, \"Cancelar\")))));\n}","map":{"version":3,"sources":["/home/ngarci12/Desktop/FrontUPB/src/views/Forms/ValidationForms.js"],"names":["React","makeStyles","FormControlLabel","FormLabel","Checkbox","InputAdornment","MailOutline","Contacts","Check","Close","GridContainer","GridItem","CustomInput","Button","Card","CardHeader","CardText","CardIcon","CardBody","CardFooter","styles","useStyles","ValidationForms","useState","required","setrequired","requiredState","setrequiredState","typeEmail","settypeEmail","typeEmailState","settypeEmailState","number","setnumber","numberState","setnumberState","url","seturl","urlState","seturlState","equalTo","setequalTo","whichEqualTo","setwhichEqualTo","equalToState","setequalToState","verifyEmail","value","emailRex","test","verifyLength","length","verifyNumber","numberRex","RegExp","verifyUrl","URL","_","typeClick","classes","cardTitle","labelHorizontal","fullWidth","onChange","event","target","type","endAdornment","danger","undefined","labelLeftHorizontal","justifyContentCenter"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\n// material ui icons\nimport MailOutline from \"@material-ui/icons/MailOutline\";\nimport Contacts from \"@material-ui/icons/Contacts\";\nimport Check from \"@material-ui/icons/Check\";\nimport Close from \"@material-ui/icons/Close\";\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardText from \"components/Card/CardText.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\n// style for this view\nimport styles from \"assets/jss/material-dashboard-pro-react/views/validationFormsStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function ValidationForms() {\n  // type validation\n  const [required, setrequired] = React.useState(\"\");\n  const [requiredState, setrequiredState] = React.useState(\"\");\n  const [typeEmail, settypeEmail] = React.useState(\"\");\n  const [typeEmailState, settypeEmailState] = React.useState(\"\");\n  const [number, setnumber] = React.useState(\"\");\n  const [numberState, setnumberState] = React.useState(\"\");\n  const [url, seturl] = React.useState(\"\");\n  const [urlState, seturlState] = React.useState(\"\");\n  const [equalTo, setequalTo] = React.useState(\"\");\n  const [whichEqualTo, setwhichEqualTo] = React.useState(\"\");\n  const [equalToState, setequalToState] = React.useState(\"\");\n\n  // function that returns true if value is email, false otherwise\n  const verifyEmail = value => {\n    var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (emailRex.test(value)) {\n      return true;\n    }\n    return false;\n  };\n  // function that verifies if a string has a given length or not\n  const verifyLength = (value, length) => {\n    if (value.length >= length) {\n      return true;\n    }\n    return false;\n  };\n  // function that verifies if value contains only numbers\n  const verifyNumber = value => {\n    var numberRex = new RegExp(\"^[0-9]+$\");\n    if (numberRex.test(value)) {\n      return true;\n    }\n    return false;\n  };\n  // verifies if value is a valid URL\n  const verifyUrl = value => {\n    try {\n      new URL(value);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n  const typeClick = () => {\n    if (requiredState === \"\") {\n      setrequiredState(\"error\");\n    }\n    if (typeEmailState === \"\") {\n      settypeEmailState(\"error\");\n    }\n    if (numberState === \"\") {\n      setnumberState(\"error\");\n    }\n    if (urlState === \"\") {\n      seturlState(\"error\");\n    }\n    if (equalToState === \"\") {\n      setequalToState(\"error\");\n    }\n  };\n  const classes = useStyles();\n  return (\n    <GridContainer>\n      <GridItem xs={12} sm={12} md={12}>\n        <Card>\n          <CardHeader color=\"danger\" text>\n            <CardText color=\"danger\">\n              <h4 className={classes.cardTitle}>Usuarios</h4>\n            </CardText>\n          </CardHeader>\n          <CardBody>\n          <h4>Datos personales</h4>\n            <form>\n              <GridContainer>\n                <GridItem xs={12} sm={2}>\n                  <FormLabel className={classes.labelHorizontal}>\n                    Required Text\n                  </FormLabel>\n                </GridItem>\n                <GridItem xs={12} sm={7}>\n                  <CustomInput\n                    success={requiredState === \"success\"}\n                    error={requiredState === \"error\"}\n                    id=\"required\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                    inputProps={{\n                      onChange: event => {\n                        if (verifyLength(event.target.value, 0)) {\n                          setrequiredState(\"success\");\n                        } else {\n                          setrequiredState(\"error\");\n                        }\n                        setrequired(event.target.value);\n                      },\n                      type: \"text\",\n                      endAdornment:\n                        requiredState === \"error\" ? (\n                          <InputAdornment position=\"end\">\n                            <Close className={classes.danger} />\n                          </InputAdornment>\n                        ) : (\n                          undefined\n                        )\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={3}>\n                  <FormLabel className={classes.labelLeftHorizontal}>\n                    <code>required</code>\n                  </FormLabel>\n                </GridItem>\n              </GridContainer>\n              <GridContainer>\n                <GridItem xs={12} sm={2}>\n                  <FormLabel className={classes.labelHorizontal}>\n                    Required Text\n                  </FormLabel>\n                </GridItem>\n                <GridItem xs={12} sm={7}>\n                  <CustomInput\n                    success={requiredState === \"success\"}\n                    error={requiredState === \"error\"}\n                    id=\"required\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                    inputProps={{\n                      onChange: event => {\n                        if (verifyLength(event.target.value, 0)) {\n                          setrequiredState(\"success\");\n                        } else {\n                          setrequiredState(\"error\");\n                        }\n                        setrequired(event.target.value);\n                      },\n                      type: \"text\",\n                      endAdornment:\n                        requiredState === \"error\" ? (\n                          <InputAdornment position=\"end\">\n                            <Close className={classes.danger} />\n                          </InputAdornment>\n                        ) : (\n                          undefined\n                        )\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={3}>\n                  <FormLabel className={classes.labelLeftHorizontal}>\n                    <code>required</code>\n                  </FormLabel>\n                </GridItem>\n              </GridContainer>\n              <GridContainer>\n                <GridItem xs={12} sm={2}>\n                  <FormLabel className={classes.labelHorizontal}>\n                    Email\n                  </FormLabel>\n                </GridItem>\n                <GridItem xs={12} sm={7}>\n                  <CustomInput\n                    success={typeEmailState === \"success\"}\n                    error={typeEmailState === \"error\"}\n                    id=\"typeemail\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                    inputProps={{\n                      onChange: event => {\n                        if (verifyEmail(event.target.value)) {\n                          settypeEmailState(\"success\");\n                        } else {\n                          settypeEmailState(\"error\");\n                        }\n                        settypeEmail(event.target.value);\n                      },\n                      type: \"email\",\n                      endAdornment:\n                        typeEmailState === \"error\" ? (\n                          <InputAdornment position=\"end\">\n                            <Close className={classes.danger} />\n                          </InputAdornment>\n                        ) : (\n                          undefined\n                        )\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={3}>\n                  <FormLabel className={classes.labelLeftHorizontal}>\n                    <code>email</code>\n                  </FormLabel>\n                </GridItem>\n              </GridContainer>\n              <GridContainer>\n                <GridItem xs={12} sm={2}>\n                  <FormLabel className={classes.labelHorizontal}>\n                    Email\n                  </FormLabel>\n                </GridItem>\n                <GridItem xs={12} sm={7}>\n                  <CustomInput\n                    success={typeEmailState === \"success\"}\n                    error={typeEmailState === \"error\"}\n                    id=\"typeemail\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                    inputProps={{\n                      onChange: event => {\n                        if (verifyEmail(event.target.value)) {\n                          settypeEmailState(\"success\");\n                        } else {\n                          settypeEmailState(\"error\");\n                        }\n                        settypeEmail(event.target.value);\n                      },\n                      type: \"email\",\n                      endAdornment:\n                        typeEmailState === \"error\" ? (\n                          <InputAdornment position=\"end\">\n                            <Close className={classes.danger} />\n                          </InputAdornment>\n                        ) : (\n                          undefined\n                        )\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={3}>\n                  <FormLabel className={classes.labelLeftHorizontal}>\n                    <code>email</code>\n                  </FormLabel>\n                </GridItem>\n              </GridContainer>\n              <h4>Datos login</h4>\n              <GridContainer>\n                <GridItem xs={12} sm={2}>\n                  <FormLabel className={classes.labelHorizontal}>\n                    Usuario\n                  </FormLabel>\n                </GridItem>\n                <GridItem xs={12} sm={7}>\n                  <CustomInput\n                    success={requiredState === \"success\"}\n                    error={requiredState === \"error\"}\n                    id=\"required\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                    inputProps={{\n                      onChange: event => {\n                        if (verifyLength(event.target.value, 0)) {\n                          setrequiredState(\"success\");\n                        } else {\n                          setrequiredState(\"error\");\n                        }\n                        setrequired(event.target.value);\n                      },\n                      type: \"text\",\n                      endAdornment:\n                        requiredState === \"error\" ? (\n                          <InputAdornment position=\"end\">\n                            <Close className={classes.danger} />\n                          </InputAdornment>\n                        ) : (\n                          undefined\n                        )\n                    }}\n                  />\n                </GridItem>\n              </GridContainer>\n              <GridContainer>\n                <GridItem xs={12} sm={2}>\n                  <FormLabel className={classes.labelHorizontal}>\n                    Contraseña\n                  </FormLabel>\n                </GridItem>\n                <GridItem xs={12} sm={3}>\n                  <CustomInput\n                    success={equalToState === \"success\"}\n                    error={equalToState === \"error\"}\n                    id=\"equalto\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                    inputProps={{\n                      onChange: event => setequalTo(event.target.value),\n                      type: \"password\",\n                      endAdornment:\n                        equalToState === \"error\" ? (\n                          <InputAdornment position=\"end\">\n                            <Close className={classes.danger} />\n                          </InputAdornment>\n                        ) : (\n                          undefined\n                        )\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={2}>\n                  <FormLabel className={classes.labelHorizontal}>\n                    Confirmar contraseña \n                  </FormLabel>\n                </GridItem>\n                <GridItem xs={12} sm={3}>\n                  <CustomInput\n                    success={equalToState === \"success\"}\n                    error={equalToState === \"error\"}\n                    id=\"whichequalto\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                    inputProps={{\n                      onChange: event => {\n                        if (equalTo === event.target.value) {\n                          setequalToState(\"success\");\n                        } else {\n                          setequalToState(\"error\");\n                        }\n                        setwhichEqualTo(event.target.value);\n                      },\n                      type: \"password\",\n                      endAdornment:\n                        equalToState === \"error\" ? (\n                          <InputAdornment position=\"end\">\n                            <Close className={classes.danger} />\n                          </InputAdornment>\n                        ) : (\n                          undefined\n                        )\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={3}>\n                  <FormLabel className={classes.labelLeftHorizontal}>\n                    <code>equalTo</code>\n                  </FormLabel>\n                </GridItem>\n              </GridContainer>\n            </form>\n          </CardBody>\n          <CardFooter className={classes.justifyContentCenter}>\n            <Button color=\"danger\" onClick={typeClick}>\n              Guardar\n            </Button>\n            <Button color=\"Primary\" onClick={typeClick}>\n              Cancelar\n            </Button>\n          </CardFooter>\n        </Card>\n      </GridItem>\n    </GridContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/layouts/Auth.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport Footer from \"components/Footer/Footer.js\";\nimport routes from \"routes.js\";\nimport styles from \"assets/jss/material-dashboard-pro-react/layouts/authStyle.js\";\nimport login from \"assets/img/loginImageUPB.jpg\";\nvar useStyles = makeStyles(styles);\nexport default function Pages(props) {\n  var rest = _extends({}, props); // ref for the wrapper div\n\n\n  var wrapper = React.createRef(); // styles\n\n  var classes = useStyles();\n  React.useEffect(function () {\n    document.body.style.overflow = \"unset\"; // Specify how to clean up after this effect:\n\n    return function cleanup() {};\n  });\n\n  var getRoutes = function getRoutes(routes) {\n    return routes.map(function (prop, key) {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n\n      if (prop.layout === \"/auth\") {\n        return React.createElement(Route, {\n          path: prop.layout + prop.path,\n          component: prop.component,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        });\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.wrapper,\n    ref: wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.fullPage,\n    style: {\n      backgroundImage: \"url(\" + login + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Card, {\n    login: true,\n    className: classes[cardAnimaton],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    className: \"\".concat(classes.cardHeader, \" \").concat(classes.textCenter),\n    color: \"rose\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Log in\"), React.createElement(\"div\", {\n    className: classes.socialLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, [\"fab fa-facebook-square\", \"fab fa-twitter\", \"fab fa-google-plus\"].map(function (prop, key) {\n    return React.createElement(Button, {\n      color: \"transparent\",\n      justIcon: true,\n      key: key,\n      className: classes.customButtonClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: prop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }))), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    success: loginEmailState === \"success\",\n    error: loginEmailState === \"error\",\n    labelText: \"Email Address *\",\n    id: \"loginemail\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (verifyLength(event.target.value, 1)) {\n          setloginPasswordState(\"success\");\n        } else {\n          setloginPasswordState(\"error\");\n        }\n\n        setloginPassword(event.target.value);\n      },\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Email, {\n        className: classes.inputAdornmentIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(CustomInput, {\n    success: loginPasswordState === \"success\",\n    error: loginPasswordState === \"error\",\n    labelText: \"Password *\",\n    id: \"loginpassword\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (verifyLength(event.target.value, 1)) {\n          setloginPasswordState(\"success\");\n        } else {\n          setloginPasswordState(\"error\");\n        }\n\n        setloginPassword(event.target.value);\n      },\n      type: \"password\",\n      autoComplete: \"off\",\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: classes.inputAdornmentIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"lock_outline\"))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.formCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"*\"), \" Required fields\")), React.createElement(CardFooter, {\n    className: classes.justifyContentCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"rose\",\n    onClick: loginClick,\n    simple: true,\n    size: \"lg\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Let\", \"'\", \"s Go\"))))))))));\n}","map":{"version":3,"sources":["/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/layouts/Auth.js"],"names":["React","Switch","Route","Redirect","makeStyles","Footer","routes","styles","login","useStyles","Pages","props","rest","wrapper","createRef","classes","useEffect","document","body","style","overflow","cleanup","getRoutes","map","prop","key","collapse","views","layout","path","component","fullPage","backgroundImage","container","cardAnimaton","cardHeader","textCenter","cardTitle","socialLine","customButtonClass","loginEmailState","fullWidth","onChange","event","verifyLength","target","value","setloginPasswordState","setloginPassword","endAdornment","inputAdornmentIcon","loginPasswordState","type","autoComplete","formCategory","justifyContentCenter","loginClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// core components\nimport Footer from \"components/Footer/Footer.js\";\n\nimport routes from \"routes.js\";\n\nimport styles from \"assets/jss/material-dashboard-pro-react/layouts/authStyle.js\";\n\nimport login from \"assets/img/loginImageUPB.jpg\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Pages(props) {\n  const { ...rest } = props;\n  // ref for the wrapper div\n  const wrapper = React.createRef();\n  // styles\n  const classes = useStyles();\n  React.useEffect(() => {\n    document.body.style.overflow = \"unset\";\n    // Specify how to clean up after this effect:\n    return function cleanup() {};\n  });\n  const getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  return (\n    <div>\n      <div className={classes.wrapper} ref={wrapper}>\n        <div\n          className={classes.fullPage}\n          style={{ backgroundImage: \"url(\" + login + \")\" }}\n        >\n          <div className={classes.container}>\n            <GridContainer justify=\"center\">\n              <GridItem xs={12} sm={6} md={4}>\n                <form>\n                  <Card login className={classes[cardAnimaton]}>\n                    <CardHeader\n                      className={`${classes.cardHeader} ${classes.textCenter}`}\n                      color=\"rose\"\n                    >\n                      <h4 className={classes.cardTitle}>Log in</h4>\n                      <div className={classes.socialLine}>\n                        {[\n                          \"fab fa-facebook-square\",\n                          \"fab fa-twitter\",\n                          \"fab fa-google-plus\"\n                        ].map((prop, key) => {\n                          return (\n                            <Button\n                              color=\"transparent\"\n                              justIcon\n                              key={key}\n                              className={classes.customButtonClass}\n                            >\n                              <i className={prop} />\n                            </Button>\n                          );\n                        })}\n                      </div>\n                    </CardHeader>\n                    <CardBody>\n                      <CustomInput\n                        success={loginEmailState === \"success\"}\n                        error={loginEmailState === \"error\"}\n                        labelText=\"Email Address *\"\n                        id=\"loginemail\"\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          onChange: event => {\n                            if (verifyLength(event.target.value, 1)) {\n                              setloginPasswordState(\"success\");\n                            } else {\n                              setloginPasswordState(\"error\");\n                            }\n                            setloginPassword(event.target.value);\n                          },\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Email className={classes.inputAdornmentIcon} />\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                      <CustomInput\n                        success={loginPasswordState === \"success\"}\n                        error={loginPasswordState === \"error\"}\n                        labelText=\"Password *\"\n                        id=\"loginpassword\"\n                        formControlProps={{\n                          fullWidth: true\n                        }}\n                        inputProps={{\n                          onChange: event => {\n                            if (verifyLength(event.target.value, 1)) {\n                              setloginPasswordState(\"success\");\n                            } else {\n                              setloginPasswordState(\"error\");\n                            }\n                            setloginPassword(event.target.value);\n                          },\n                          type: \"password\",\n                          autoComplete: \"off\",\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <Icon className={classes.inputAdornmentIcon}>\n                                lock_outline\n                              </Icon>\n                            </InputAdornment>\n                          )\n                        }}\n                      />\n                      <div className={classes.formCategory}>\n                        <small>*</small> Required fields\n                      </div>\n                    </CardBody>\n                    <CardFooter className={classes.justifyContentCenter}>\n                      <Button\n                        color=\"rose\"\n                        onClick={loginClick}\n                        simple\n                        size=\"lg\"\n                        block\n                      >\n                        Let{\"'\"}s Go\n                      </Button>\n                    </CardFooter>\n                  </Card>\n                </form>\n              </GridItem>\n            </GridContainer>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/home/ngarci12/Desktop/FrontUPB/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/ngarci12/Desktop/FrontUPB/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ngarci12/Desktop/FrontUPB/src/components/CustomDropdown/CustomDropdown.js\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Popper from \"@material-ui/core/Popper\"; // core components\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport styles from \"assets/jss/material-dashboard-pro-react/components/customDropdownStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function CustomDropdown(props) {\n  var _classNames, _classNames2, _classNames3;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var classes = useStyles();\n\n  var handleClick = function handleClick(event) {\n    if (anchorEl && anchorEl.contains(event.target)) {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  var handleClose = function handleClose(event) {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n\n    setAnchorEl(null);\n  };\n\n  var handleCloseMenu = function handleCloseMenu(param) {\n    setAnchorEl(null);\n\n    if (props && props.onClick) {\n      props.onClick(param);\n    }\n  };\n\n  var buttonText = props.buttonText,\n      buttonIcon = props.buttonIcon,\n      dropdownList = props.dropdownList,\n      buttonProps = props.buttonProps,\n      dropup = props.dropup,\n      dropdownHeader = props.dropdownHeader,\n      caret = props.caret,\n      hoverColor = props.hoverColor,\n      dropPlacement = props.dropPlacement,\n      rtlActive = props.rtlActive,\n      noLiPadding = props.noLiPadding,\n      innerDropDown = props.innerDropDown,\n      navDropdown = props.navDropdown;\n  var caretClasses = classNames((_classNames = {}, _defineProperty(_classNames, classes.caret, true), _defineProperty(_classNames, classes.caretDropup, dropup && !anchorEl), _defineProperty(_classNames, classes.caretActive, Boolean(anchorEl) && !dropup), _defineProperty(_classNames, classes.caretRTL, rtlActive), _classNames));\n  var dropdownItem = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.dropdownItem, true), _defineProperty(_classNames2, classes[hoverColor + \"Hover\"], true), _defineProperty(_classNames2, classes.noLiPadding, noLiPadding), _defineProperty(_classNames2, classes.dropdownItemRTL, rtlActive), _classNames2));\n  var dropDownMenu = React.createElement(MenuList, {\n    role: \"menu\",\n    className: classes.menuList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, dropdownHeader !== undefined ? React.createElement(MenuItem, {\n    onClick: function onClick() {\n      return handleCloseMenu(dropdownHeader);\n    },\n    className: classes.dropdownHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, dropdownHeader) : null, dropdownList.map(function (prop, key) {\n    if (prop.divider) {\n      return React.createElement(Divider, {\n        key: key,\n        onClick: function onClick() {\n          return handleCloseMenu(\"divider\");\n        },\n        className: classes.dropdownDividerItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    } else if (prop.props !== undefined && prop.props[\"data-ref\"] === \"multi\") {\n      return React.createElement(MenuItem, {\n        key: key,\n        className: dropdownItem,\n        style: {\n          overflow: \"visible\",\n          padding: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, prop);\n    }\n\n    return React.createElement(MenuItem, {\n      key: key,\n      onClick: function onClick() {\n        return handleCloseMenu(prop);\n      },\n      className: dropdownItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, prop);\n  }));\n  return React.createElement(\"div\", {\n    className: innerDropDown ? classes.innerManager : classes.manager,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: buttonText !== undefined ? \"\" : classes.target,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Button, Object.assign({\n    \"aria-label\": \"Notifications\",\n    \"aria-owns\": anchorEl ? \"menu-list\" : null,\n    \"aria-haspopup\": \"true\"\n  }, buttonProps, {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), buttonIcon !== undefined ? React.createElement(props.buttonIcon, {\n    className: classes.buttonIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }) : null, buttonText !== undefined ? buttonText : null, caret ? React.createElement(\"b\", {\n    className: caretClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }) : null)), React.createElement(Popper, {\n    open: Boolean(anchorEl),\n    anchorEl: anchorEl,\n    transition: true,\n    disablePortal: true,\n    placement: dropPlacement,\n    className: classNames((_classNames3 = {}, _defineProperty(_classNames3, classes.popperClose, !anchorEl), _defineProperty(_classNames3, classes.popperResponsive, true), _defineProperty(_classNames3, classes.popperNav, Boolean(anchorEl) && navDropdown), _classNames3)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, function () {\n    return React.createElement(Grow, {\n      \"in\": Boolean(anchorEl),\n      id: \"menu-list\",\n      style: dropup ? {\n        transformOrigin: \"0 100% 0\"\n      } : {\n        transformOrigin: \"0 0 0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.dropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, innerDropDown ? dropDownMenu : React.createElement(ClickAwayListener, {\n      onClickAway: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, dropDownMenu)));\n  }));\n}\nCustomDropdown.defaultProps = {\n  caret: true,\n  dropup: false,\n  hoverColor: \"primary\"\n};\nCustomDropdown.propTypes = {\n  hoverColor: PropTypes.oneOf([\"dark\", \"primary\", \"info\", \"success\", \"warning\", \"danger\", \"rose\"]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.object,\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  dropdownHeader: PropTypes.node,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  dropPlacement: PropTypes.oneOf([\"bottom\", \"top\", \"right\", \"left\", \"bottom-start\", \"bottom-end\", \"top-start\", \"top-end\", \"right-start\", \"right-end\", \"left-start\", \"left-end\"]),\n  noLiPadding: PropTypes.bool,\n  innerDropDown: PropTypes.bool,\n  navDropdown: PropTypes.bool,\n  // This is a function that returns the clicked menu item\n  onClick: PropTypes.func\n};","map":{"version":3,"sources":["/home/ngarci12/Desktop/FrontUPB/src/components/CustomDropdown/CustomDropdown.js"],"names":["React","classNames","PropTypes","makeStyles","MenuItem","MenuList","ClickAwayListener","Paper","Grow","Divider","Popper","Button","styles","useStyles","CustomDropdown","props","useState","anchorEl","setAnchorEl","classes","handleClick","event","contains","target","currentTarget","handleClose","handleCloseMenu","param","onClick","buttonText","buttonIcon","dropdownList","buttonProps","dropup","dropdownHeader","caret","hoverColor","dropPlacement","rtlActive","noLiPadding","innerDropDown","navDropdown","caretClasses","caretDropup","caretActive","Boolean","caretRTL","dropdownItem","dropdownItemRTL","dropDownMenu","menuList","undefined","map","prop","key","divider","dropdownDividerItem","overflow","padding","innerManager","manager","popperClose","popperResponsive","popperNav","transformOrigin","dropdown","defaultProps","propTypes","oneOf","node","object","array","bool","func"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Popper from \"@material-ui/core/Popper\";\n// core components\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-dashboard-pro-react/components/customDropdownStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomDropdown(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n  const handleClick = event => {\n    if (anchorEl && anchorEl.contains(event.target)) {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n  const handleClose = event => {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n    setAnchorEl(null);\n  };\n  const handleCloseMenu = param => {\n    setAnchorEl(null);\n    if (props && props.onClick) {\n      props.onClick(param);\n    }\n  };\n  const {\n    buttonText,\n    buttonIcon,\n    dropdownList,\n    buttonProps,\n    dropup,\n    dropdownHeader,\n    caret,\n    hoverColor,\n    dropPlacement,\n    rtlActive,\n    noLiPadding,\n    innerDropDown,\n    navDropdown\n  } = props;\n  const caretClasses = classNames({\n    [classes.caret]: true,\n    [classes.caretDropup]: dropup && !anchorEl,\n    [classes.caretActive]: Boolean(anchorEl) && !dropup,\n    [classes.caretRTL]: rtlActive\n  });\n  const dropdownItem = classNames({\n    [classes.dropdownItem]: true,\n    [classes[hoverColor + \"Hover\"]]: true,\n    [classes.noLiPadding]: noLiPadding,\n    [classes.dropdownItemRTL]: rtlActive\n  });\n  const dropDownMenu = (\n    <MenuList role=\"menu\" className={classes.menuList}>\n      {dropdownHeader !== undefined ? (\n        <MenuItem\n          onClick={() => handleCloseMenu(dropdownHeader)}\n          className={classes.dropdownHeader}\n        >\n          {dropdownHeader}\n        </MenuItem>\n      ) : null}\n      {dropdownList.map((prop, key) => {\n        if (prop.divider) {\n          return (\n            <Divider\n              key={key}\n              onClick={() => handleCloseMenu(\"divider\")}\n              className={classes.dropdownDividerItem}\n            />\n          );\n        } else if (\n          prop.props !== undefined &&\n          prop.props[\"data-ref\"] === \"multi\"\n        ) {\n          return (\n            <MenuItem\n              key={key}\n              className={dropdownItem}\n              style={{ overflow: \"visible\", padding: 0 }}\n            >\n              {prop}\n            </MenuItem>\n          );\n        }\n        return (\n          <MenuItem\n            key={key}\n            onClick={() => handleCloseMenu(prop)}\n            className={dropdownItem}\n          >\n            {prop}\n          </MenuItem>\n        );\n      })}\n    </MenuList>\n  );\n  return (\n    <div className={innerDropDown ? classes.innerManager : classes.manager}>\n      <div className={buttonText !== undefined ? \"\" : classes.target}>\n        <Button\n          aria-label=\"Notifications\"\n          aria-owns={anchorEl ? \"menu-list\" : null}\n          aria-haspopup=\"true\"\n          {...buttonProps}\n          onClick={handleClick}\n        >\n          {buttonIcon !== undefined ? (\n            <props.buttonIcon className={classes.buttonIcon} />\n          ) : null}\n          {buttonText !== undefined ? buttonText : null}\n          {caret ? <b className={caretClasses} /> : null}\n        </Button>\n      </div>\n      <Popper\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        transition\n        disablePortal\n        placement={dropPlacement}\n        className={classNames({\n          [classes.popperClose]: !anchorEl,\n          [classes.popperResponsive]: true,\n          [classes.popperNav]: Boolean(anchorEl) && navDropdown\n        })}\n      >\n        {() => (\n          <Grow\n            in={Boolean(anchorEl)}\n            id=\"menu-list\"\n            style={\n              dropup\n                ? { transformOrigin: \"0 100% 0\" }\n                : { transformOrigin: \"0 0 0\" }\n            }\n          >\n            <Paper className={classes.dropdown}>\n              {innerDropDown ? (\n                dropDownMenu\n              ) : (\n                <ClickAwayListener onClickAway={handleClose}>\n                  {dropDownMenu}\n                </ClickAwayListener>\n              )}\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </div>\n  );\n}\n\nCustomDropdown.defaultProps = {\n  caret: true,\n  dropup: false,\n  hoverColor: \"primary\"\n};\n\nCustomDropdown.propTypes = {\n  hoverColor: PropTypes.oneOf([\n    \"dark\",\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"rose\"\n  ]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.object,\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  dropdownHeader: PropTypes.node,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  dropPlacement: PropTypes.oneOf([\n    \"bottom\",\n    \"top\",\n    \"right\",\n    \"left\",\n    \"bottom-start\",\n    \"bottom-end\",\n    \"top-start\",\n    \"top-end\",\n    \"right-start\",\n    \"right-end\",\n    \"left-start\",\n    \"left-end\"\n  ]),\n  noLiPadding: PropTypes.bool,\n  innerDropDown: PropTypes.bool,\n  navDropdown: PropTypes.bool,\n  // This is a function that returns the clicked menu item\n  onClick: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}
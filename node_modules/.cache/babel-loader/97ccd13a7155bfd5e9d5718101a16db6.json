{"ast":null,"code":"import _slicedToArray from \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/views/Pages/LoginPage.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-dashboard-pro-react/views/loginPageStyle.js\";\nimport Logo from \"assets/img/upb-logo-1422010671195.png\";\nvar useStyles = makeStyles(styles);\nexport default function LoginPage() {\n  // login form\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      required = _React$useState2[0],\n      setrequired = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      toHome = _React$useState4[0],\n      setToHome = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      requiredState = _React$useState6[0],\n      setrequiredState = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loginPassword = _React$useState8[0],\n      setloginPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      loginPasswordState = _React$useState10[0],\n      setloginPasswordState = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"cardHidden\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      cardAnimaton = _React$useState12[0],\n      setCardAnimation = _React$useState12[1]; // function that verifies if a string has a given length or not\n\n\n  var verifyLength = function verifyLength(value, length) {\n    if (value.length >= length) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var loginClick = function loginClick() {\n    if (requiredState === \"\") {\n      setrequiredState(\"error\");\n    }\n\n    if (loginPasswordState === \"\") {\n      setloginPasswordState(\"error\");\n    }\n  };\n\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  var classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: toHome ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Card, {\n    login: true,\n    className: classes[cardAnimaton],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    className: \"\".concat(classes.cardHeader, \" \").concat(classes.textCenter),\n    color: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"SisLab\"))), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    success: requiredState === \"success\",\n    error: requiredState === \"error\",\n    id: \"required\",\n    labelText: \"Usuario\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (verifyLength(event.target.value, 0)) {\n          setrequiredState(\"success\");\n        } else {\n          setrequiredState(\"error\");\n        }\n\n        setrequired(event.target.value);\n      },\n      type: \"text\",\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: classes.inputAdornmentIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"perm_identity\"))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(CustomInput, {\n    success: loginPasswordState === \"success\",\n    error: loginPasswordState === \"error\",\n    labelText: \"Contrase\\xF1a\",\n    id: \"loginpassword\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      onChange: function onChange(event) {\n        if (verifyLength(event.target.value, 1)) {\n          setloginPasswordState(\"success\");\n        } else {\n          setloginPasswordState(\"error\");\n        }\n\n        setloginPassword(event.target.value);\n      },\n      type: \"password\",\n      autoComplete: \"off\",\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: classes.inputAdornmentIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"lock_outline\"))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(CardFooter, {\n    className: classes.justifyContentCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"danger\",\n    onClick: loginClick,\n    simple: true,\n    size: \"lg\",\n    block: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Iniciar sesi\\xF3n\")))))));\n}","map":{"version":3,"sources":["/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/views/Pages/LoginPage.js"],"names":["React","Redirect","makeStyles","InputAdornment","Icon","GridContainer","GridItem","CustomInput","Button","Card","CardBody","CardHeader","CardFooter","styles","Logo","useStyles","LoginPage","useState","required","setrequired","toHome","setToHome","requiredState","setrequiredState","loginPassword","setloginPassword","loginPasswordState","setloginPasswordState","cardAnimaton","setCardAnimation","verifyLength","value","length","loginClick","setTimeout","classes","container","cardHeader","textCenter","fullWidth","onChange","event","target","type","endAdornment","inputAdornmentIcon","autoComplete","justifyContentCenter"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\n\nimport styles from \"assets/jss/material-dashboard-pro-react/views/loginPageStyle.js\";\nimport Logo from \"assets/img/upb-logo-1422010671195.png\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function LoginPage() {\n  // login form\n  const [required, setrequired] = React.useState(\"\");\n  const [toHome, setToHome] = React.useState(false);\n  const [requiredState, setrequiredState] = React.useState(\"\");\n  const [loginPassword, setloginPassword] = React.useState(\"\");\n  const [loginPasswordState, setloginPasswordState] = React.useState(\"\");\n  const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n\n  // function that verifies if a string has a given length or not\n  const verifyLength = (value, length) => {\n    if (value.length >= length) {\n      return true;\n    }\n    return false;\n  };\n\n  const loginClick = () => {\n    if (requiredState === \"\") {\n      setrequiredState(\"error\");\n    }\n    if (loginPasswordState === \"\") {\n      setloginPasswordState(\"error\");\n    }\n  };\n\n  setTimeout(function() {\n    setCardAnimation(\"\");\n  }, 700);\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <GridContainer justify=\"center\">\n        <GridItem xs={12} sm={6} md={4}>\n          <form onSubmit={toHome ? <Redirect to=\"/\" /> : null}>\n            <Card login className={classes[cardAnimaton]}>\n              <CardHeader\n                className={`${classes.cardHeader} ${classes.textCenter}`}\n                color=\"danger\"\n              >\n                <img src={Logo} />\n                <br />\n                <br />\n                <h4>\n                  <b>SisLab</b>\n                </h4>\n              </CardHeader>\n              <CardBody>\n                <CustomInput\n                  success={requiredState === \"success\"}\n                  error={requiredState === \"error\"}\n                  id=\"required\"\n                  labelText=\"Usuario\"\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                  inputProps={{\n                    onChange: event => {\n                      if (verifyLength(event.target.value, 0)) {\n                        setrequiredState(\"success\");\n                      } else {\n                        setrequiredState(\"error\");\n                      }\n                      setrequired(event.target.value);\n                    },\n                    type: \"text\",\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <Icon className={classes.inputAdornmentIcon}>\n                          perm_identity\n                        </Icon>\n                      </InputAdornment>\n                    )\n                  }}\n                />\n                <CustomInput\n                  success={loginPasswordState === \"success\"}\n                  error={loginPasswordState === \"error\"}\n                  labelText=\"Contraseña\"\n                  id=\"loginpassword\"\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                  inputProps={{\n                    onChange: event => {\n                      if (verifyLength(event.target.value, 1)) {\n                        setloginPasswordState(\"success\");\n                      } else {\n                        setloginPasswordState(\"error\");\n                      }\n                      setloginPassword(event.target.value);\n                    },\n                    type: \"password\",\n                    autoComplete: \"off\",\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <Icon className={classes.inputAdornmentIcon}>\n                          lock_outline\n                        </Icon>\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </CardBody>\n              <CardFooter className={classes.justifyContentCenter}>\n                <Button\n                  color=\"danger\"\n                  onClick={loginClick}\n                  simple\n                  size=\"lg\"\n                  block\n                  type=\"submit\"\n                >\n                  Iniciar sesión\n                </Button>\n              </CardFooter>\n            </Card>\n          </form>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/components/Table/Table.js\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport styles from \"assets/jss/material-dashboard-pro-react/components/tableStyle\";\nvar useStyles = makeStyles(styles);\nexport default function CustomTable(props) {\n  var classes = useStyles();\n  var tableHead = props.tableHead,\n      tableData = props.tableData,\n      tableHeaderColor = props.tableHeaderColor,\n      hover = props.hover,\n      colorsColls = props.colorsColls,\n      coloredColls = props.coloredColls,\n      customCellClasses = props.customCellClasses,\n      customClassesForCells = props.customClassesForCells,\n      striped = props.striped,\n      tableShopping = props.tableShopping,\n      customHeadCellClasses = props.customHeadCellClasses,\n      customHeadClassesForCells = props.customHeadClassesForCells;\n  return React.createElement(\"div\", {\n    className: classes.tableResponsive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, tableHead !== undefined ? React.createElement(TableHead, {\n    className: classes[tableHeaderColor],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    className: classes.tableRow + \" \" + classes.tableRowHead,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, tableHead.map(function (prop, key) {\n    var _cx;\n\n    var tableCellClasses = classes.tableHeadCell + \" \" + classes.tableCell + \" \" + cx((_cx = {}, _defineProperty(_cx, customHeadCellClasses[customHeadClassesForCells.indexOf(key)], customHeadClassesForCells.indexOf(key) !== -1), _defineProperty(_cx, classes.tableShoppingHead, tableShopping), _defineProperty(_cx, classes.tableHeadFontSize, !tableShopping), _cx));\n    return React.createElement(TableCell, {\n      className: tableCellClasses,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, prop);\n  }))) : null, React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, tableData.map(function (prop, key) {\n    var _cx2;\n\n    var rowColor = \"\";\n    var rowColored = false;\n\n    if (prop.color !== undefined) {\n      rowColor = prop.color;\n      rowColored = true;\n      prop = prop.data;\n    }\n\n    var tableRowClasses = cx((_cx2 = {}, _defineProperty(_cx2, classes.tableRowBody, true), _defineProperty(_cx2, classes.tableRowHover, hover), _defineProperty(_cx2, classes[rowColor + \"Row\"], rowColored), _defineProperty(_cx2, classes.tableStripedRow, striped && key % 2 === 0), _cx2));\n\n    if (prop.total) {\n      return React.createElement(TableRow, {\n        key: key,\n        hover: hover,\n        className: tableRowClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        className: classes.tableCell,\n        colSpan: prop.colspan,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableCellTotal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Total\"), React.createElement(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableCellAmount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, prop.amount), tableHead.length - (prop.colspan - 0 + 2) > 0 ? React.createElement(TableCell, {\n        className: classes.tableCell,\n        colSpan: tableHead.length - (prop.colspan - 0 + 2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }) : null);\n    }\n\n    if (prop.purchase) {\n      return React.createElement(TableRow, {\n        key: key,\n        hover: hover,\n        className: tableRowClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        className: classes.tableCell,\n        colSpan: prop.colspan,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(TableCell, {\n        className: classes.tableCell + \" \" + classes.right,\n        colSpan: prop.col.colspan,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, prop.col.text));\n    }\n\n    return React.createElement(TableRow, {\n      key: key,\n      hover: hover,\n      className: classes.tableRow + \" \" + tableRowClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, prop.map(function (prop, key) {\n      var _cx3;\n\n      var tableCellClasses = classes.tableCell + \" \" + cx((_cx3 = {}, _defineProperty(_cx3, classes[colorsColls[coloredColls.indexOf(key)]], coloredColls.indexOf(key) !== -1), _defineProperty(_cx3, customCellClasses[customClassesForCells.indexOf(key)], customClassesForCells.indexOf(key) !== -1), _cx3));\n      return React.createElement(TableCell, {\n        className: tableCellClasses,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, prop);\n    }));\n  }))));\n}\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\",\n  hover: false,\n  colorsColls: [],\n  coloredColls: [],\n  striped: false,\n  customCellClasses: [],\n  customClassesForCells: [],\n  customHeadCellClasses: [],\n  customHeadClassesForCells: []\n};\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\"warning\", \"primary\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  // Of(PropTypes.arrayOf(PropTypes.node)) || Of(PropTypes.object),\n  tableData: PropTypes.array,\n  hover: PropTypes.bool,\n  coloredColls: PropTypes.arrayOf(PropTypes.number),\n  // Of([\"warning\",\"primary\",\"danger\",\"success\",\"info\",\"rose\",\"gray\"]) - colorsColls\n  colorsColls: PropTypes.array,\n  customCellClasses: PropTypes.arrayOf(PropTypes.string),\n  customClassesForCells: PropTypes.arrayOf(PropTypes.number),\n  customHeadCellClasses: PropTypes.arrayOf(PropTypes.string),\n  customHeadClassesForCells: PropTypes.arrayOf(PropTypes.number),\n  striped: PropTypes.bool,\n  // this will cause some changes in font\n  tableShopping: PropTypes.bool\n};","map":{"version":3,"sources":["/home/ngarci12/Desktop/material-dashboard-pro-react-v1/material-dashboard-pro-react-v1/src/components/Table/Table.js"],"names":["React","cx","PropTypes","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","styles","useStyles","CustomTable","props","classes","tableHead","tableData","tableHeaderColor","hover","colorsColls","coloredColls","customCellClasses","customClassesForCells","striped","tableShopping","customHeadCellClasses","customHeadClassesForCells","tableResponsive","table","undefined","tableRow","tableRowHead","map","prop","key","tableCellClasses","tableHeadCell","tableCell","indexOf","tableShoppingHead","tableHeadFontSize","rowColor","rowColored","color","data","tableRowClasses","tableRowBody","tableRowHover","tableStripedRow","total","colspan","tableCellTotal","tableCellAmount","amount","length","purchase","right","col","text","defaultProps","propTypes","oneOf","arrayOf","string","array","bool","number"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport styles from \"assets/jss/material-dashboard-pro-react/components/tableStyle\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomTable(props) {\n  const classes = useStyles();\n  const {\n    tableHead,\n    tableData,\n    tableHeaderColor,\n    hover,\n    colorsColls,\n    coloredColls,\n    customCellClasses,\n    customClassesForCells,\n    striped,\n    tableShopping,\n    customHeadCellClasses,\n    customHeadClassesForCells\n  } = props;\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor]}>\n            <TableRow className={classes.tableRow + \" \" + classes.tableRowHead}>\n              {tableHead.map((prop, key) => {\n                const tableCellClasses =\n                  classes.tableHeadCell +\n                  \" \" +\n                  classes.tableCell +\n                  \" \" +\n                  cx({\n                    [customHeadCellClasses[\n                      customHeadClassesForCells.indexOf(key)\n                    ]]: customHeadClassesForCells.indexOf(key) !== -1,\n                    [classes.tableShoppingHead]: tableShopping,\n                    [classes.tableHeadFontSize]: !tableShopping\n                  });\n                return (\n                  <TableCell className={tableCellClasses} key={key}>\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((prop, key) => {\n            var rowColor = \"\";\n            var rowColored = false;\n            if (prop.color !== undefined) {\n              rowColor = prop.color;\n              rowColored = true;\n              prop = prop.data;\n            }\n            const tableRowClasses = cx({\n              [classes.tableRowBody]: true,\n              [classes.tableRowHover]: hover,\n              [classes[rowColor + \"Row\"]]: rowColored,\n              [classes.tableStripedRow]: striped && key % 2 === 0\n            });\n            if (prop.total) {\n              return (\n                <TableRow key={key} hover={hover} className={tableRowClasses}>\n                  <TableCell\n                    className={classes.tableCell}\n                    colSpan={prop.colspan}\n                  />\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableCellTotal}\n                  >\n                    Total\n                  </TableCell>\n                  <TableCell\n                    className={\n                      classes.tableCell + \" \" + classes.tableCellAmount\n                    }\n                  >\n                    {prop.amount}\n                  </TableCell>\n                  {tableHead.length - (prop.colspan - 0 + 2) > 0 ? (\n                    <TableCell\n                      className={classes.tableCell}\n                      colSpan={tableHead.length - (prop.colspan - 0 + 2)}\n                    />\n                  ) : null}\n                </TableRow>\n              );\n            }\n            if (prop.purchase) {\n              return (\n                <TableRow key={key} hover={hover} className={tableRowClasses}>\n                  <TableCell\n                    className={classes.tableCell}\n                    colSpan={prop.colspan}\n                  />\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.right}\n                    colSpan={prop.col.colspan}\n                  >\n                    {prop.col.text}\n                  </TableCell>\n                </TableRow>\n              );\n            }\n            return (\n              <TableRow\n                key={key}\n                hover={hover}\n                className={classes.tableRow + \" \" + tableRowClasses}\n              >\n                {prop.map((prop, key) => {\n                  const tableCellClasses =\n                    classes.tableCell +\n                    \" \" +\n                    cx({\n                      [classes[colorsColls[coloredColls.indexOf(key)]]]:\n                        coloredColls.indexOf(key) !== -1,\n                      [customCellClasses[customClassesForCells.indexOf(key)]]:\n                        customClassesForCells.indexOf(key) !== -1\n                    });\n                  return (\n                    <TableCell className={tableCellClasses} key={key}>\n                      {prop}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\",\n  hover: false,\n  colorsColls: [],\n  coloredColls: [],\n  striped: false,\n  customCellClasses: [],\n  customClassesForCells: [],\n  customHeadCellClasses: [],\n  customHeadClassesForCells: []\n};\n\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  // Of(PropTypes.arrayOf(PropTypes.node)) || Of(PropTypes.object),\n  tableData: PropTypes.array,\n  hover: PropTypes.bool,\n  coloredColls: PropTypes.arrayOf(PropTypes.number),\n  // Of([\"warning\",\"primary\",\"danger\",\"success\",\"info\",\"rose\",\"gray\"]) - colorsColls\n  colorsColls: PropTypes.array,\n  customCellClasses: PropTypes.arrayOf(PropTypes.string),\n  customClassesForCells: PropTypes.arrayOf(PropTypes.number),\n  customHeadCellClasses: PropTypes.arrayOf(PropTypes.string),\n  customHeadClassesForCells: PropTypes.arrayOf(PropTypes.number),\n  striped: PropTypes.bool,\n  // this will cause some changes in font\n  tableShopping: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}